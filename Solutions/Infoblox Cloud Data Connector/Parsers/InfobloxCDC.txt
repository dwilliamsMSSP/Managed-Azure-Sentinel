// Title:           Infoblox Cloud Data Connector Parser
// Author:          Infoblox
// Version:         1.0
// Last Updated:    12/2/2021
// Comment:         Initial Release
//  
// DESCRIPTION:
// This parser takes raw Infoblox Cloud Data Connector (CDC) logs from a Syslog (CEF) stream and parses the logs into a normalized schema.
//
// USAGE:
// 1. Open Log Analytics/Microsoft Sentinel Logs blade. Copy the query below and paste into the Logs query window. 
// 2. Click the Save button above the query. A pane will appear on the right, select "as Function" from the drop down. Enter the Function Name as InfobloxCDC.
// 3. Kusto Functions can typically take up to 15 minutes to activate. You can then use Function Alias for other queries.
//
// REFERENCES: 
// Using functions in Azure monitor log queries: https://docs.microsoft.com/azure/azure-monitor/log-query/functions
// 
CommonSecurityLog
| where DeviceVendor == "Infoblox" and DeviceProduct == "Data Connector"
| parse-kv AdditionalExtensions as (InfobloxAnCount:int, InfobloxArCount:int, InfobloxDNSQClass:string, InfobloxDNSQFlags:string, InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxDNSView:string, InfobloxNsCount:int) with (pair_delimiter=';', kv_delimiter='=')
| extend ThreatLevel_Score = toint(column_ifexists("InfobloxThreatLevel", ""))
| extend ThreatLevel = case(ThreatLevel_Score>=80, "High",
                       ThreatLevel_Score>=30 and ThreatLevel_Score<80, "Medium",
                       ThreatLevel_Score<30 and ThreatLevel_Score>=1, "Low",
                       ThreatLevel_Score == 0,"Info",
                       "N/A" )
| extend ThreatClass = column_ifexists("ThreatClass", "")
| extend ThreatProperty = column_ifexists("ThreatProperty", "")
| extend InfobloxB1FeedName = column_ifexists("InfobloxB1FeedName", "")
| extend InfobloxRPZ = column_ifexists("InfobloxRPZ", "")
| extend InfobloxB1PolicyAction = column_ifexists("InfobloxB1PolicyAction", "")
| extend InfobloxB1PolicyName = column_ifexists("InfobloxB1PolicyName", "")
| extend InfobloxDomainCat = column_ifexists("InfobloxDomainCat", "")
| extend InfobloxB1ConnectionType = column_ifexists("InfobloxB1ConnectionType", "")
| extend InfobloxB1SrcOSVersion = column_ifexists("InfobloxB1SrcOSVersion", "")
| extend InfobloxB1Network = column_ifexists("InfobloxB1Network", "")
| extend DeviceName = column_ifexists("DeviceName", "")
| extend SourceMACAddress = column_ifexists("SourceMACAddress", "")
| extend InfobloxLeaseOp = column_ifexists("InfobloxLeaseOp", "")
| extend InfobloxLifetime = column_ifexists("InfobloxLifetime", "")
| extend InfobloxLeaseUUID = column_ifexists("InfobloxLeaseUUID", "")
| extend InfobloxDNSRCode = column_ifexists("InfobloxDNSRCode", "")
| extend InfobloxDNSQClass = column_ifexists("InfobloxDNSQClass", "")
| extend InfobloxDNSQType = column_ifexists("InfobloxDNSQType", "")
