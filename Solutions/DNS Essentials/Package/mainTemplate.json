{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for DNS Essentials"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "DNS Solution Workbook",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "watchlist1-id": {
      "type": "string",
      "defaultValue": "DNS_Solution_Monitoring_Configuration",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist2-id": {
      "type": "string",
      "defaultValue": "DNS_Solution_Domain_IOCs",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    }
  },
  "variables": {
    "solutionId": "azuresentinel.azure-sentinel-solution-dns-domain",
    "_solutionId": "[variables('solutionId')]",
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "DNSSolutionWorkbook",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1')))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "analyticRuleVersion1": "1.0.0",
    "analyticRulecontentId1": "8e4a010a-972c-4124-8c27-1efcd7e3125a",
    "_analyticRulecontentId1": "[variables('analyticRulecontentId1')]",
    "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId1'))]",
    "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId1')))]",
    "analyticRuleVersion2": "1.0.0",
    "analyticRulecontentId2": "02f23312-1a33-4390-8b80-f7cd4df4dea0",
    "_analyticRulecontentId2": "[variables('analyticRulecontentId2')]",
    "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId2'))]",
    "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId2')))]",
    "analyticRuleVersion3": "1.0.0",
    "analyticRulecontentId3": "4ab8b09e-3c23-4974-afbe-7e653779eb2b",
    "_analyticRulecontentId3": "[variables('analyticRulecontentId3')]",
    "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId3'))]",
    "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId3')))]",
    "analyticRuleVersion4": "1.0.0",
    "analyticRulecontentId4": "cf687598-5a2c-46f8-81c8-06b15ed489b1",
    "_analyticRulecontentId4": "[variables('analyticRulecontentId4')]",
    "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId4'))]",
    "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId4')))]",
    "analyticRuleVersion5": "1.0.0",
    "analyticRulecontentId5": "5b8344eb-fa28-4ac3-bcff-bc19d5d63089",
    "_analyticRulecontentId5": "[variables('analyticRulecontentId5')]",
    "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId5'))]",
    "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId5')))]",
    "analyticRuleVersion6": "1.0.0",
    "analyticRulecontentId6": "01191239-274e-43c9-b154-3a042692af06",
    "_analyticRulecontentId6": "[variables('analyticRulecontentId6')]",
    "analyticRuleId6": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId6'))]",
    "analyticRuleTemplateSpecName6": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId6')))]",
    "analyticRuleVersion7": "1.0.0",
    "analyticRulecontentId7": "89ba52fa-96a7-4653-829a-ca49bb13336c",
    "_analyticRulecontentId7": "[variables('analyticRulecontentId7')]",
    "analyticRuleId7": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId7'))]",
    "analyticRuleTemplateSpecName7": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId7')))]",
    "analyticRuleVersion8": "1.0.0",
    "analyticRulecontentId8": "0fe6bde4-b215-480c-99b4-84a96edcdbd7",
    "_analyticRulecontentId8": "[variables('analyticRulecontentId8')]",
    "analyticRuleId8": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId8'))]",
    "analyticRuleTemplateSpecName8": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId8')))]",
    "analyticRuleVersion9": "1.0.0",
    "analyticRulecontentId9": "77b7c820-5f60-4779-8bdb-f06e21add5f1",
    "_analyticRulecontentId9": "[variables('analyticRulecontentId9')]",
    "analyticRuleId9": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId9'))]",
    "analyticRuleTemplateSpecName9": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId9')))]",
    "SummarizeData": "SummarizeData",
    "_SummarizeData": "[variables('SummarizeData')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "SummarizeData",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1')))]",
    "huntingQueryVersion1": "1.0.0",
    "huntingQuerycontentId1": "50f0cdfb-8b01-4eca-823d-2bbe6b8a5b95",
    "_huntingQuerycontentId1": "[variables('huntingQuerycontentId1')]",
    "huntingQueryId1": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId1'))]",
    "huntingQueryTemplateSpecName1": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId1')))]",
    "huntingQueryVersion2": "1.0.0",
    "huntingQuerycontentId2": "83e70a34-d96f-419d-815b-43d1499e88ed",
    "_huntingQuerycontentId2": "[variables('huntingQuerycontentId2')]",
    "huntingQueryId2": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId2'))]",
    "huntingQueryTemplateSpecName2": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId2')))]",
    "huntingQueryVersion3": "1.0.0",
    "huntingQuerycontentId3": "0a8f5777-f38a-4c37-b531-411bdecef976",
    "_huntingQuerycontentId3": "[variables('huntingQuerycontentId3')]",
    "huntingQueryId3": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId3'))]",
    "huntingQueryTemplateSpecName3": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId3')))]",
    "huntingQueryVersion4": "1.0.0",
    "huntingQuerycontentId4": "4717929b-121d-4d90-b7ba-e3259ef16aca",
    "_huntingQuerycontentId4": "[variables('huntingQuerycontentId4')]",
    "huntingQueryId4": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId4'))]",
    "huntingQueryTemplateSpecName4": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId4')))]",
    "huntingQueryVersion5": "1.0.0",
    "huntingQuerycontentId5": "c5d0fea4-dc84-437e-b859-692b6358238e",
    "_huntingQuerycontentId5": "[variables('huntingQuerycontentId5')]",
    "huntingQueryId5": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId5'))]",
    "huntingQueryTemplateSpecName5": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId5')))]",
    "huntingQueryVersion6": "1.0.0",
    "huntingQuerycontentId6": "5366b848-0886-439f-b312-0b94bb687d06",
    "_huntingQuerycontentId6": "[variables('huntingQuerycontentId6')]",
    "huntingQueryId6": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId6'))]",
    "huntingQueryTemplateSpecName6": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId6')))]",
    "huntingQueryVersion7": "1.0.0",
    "huntingQuerycontentId7": "b31b5d70-4c75-4a5f-8af7-6a83f6eb372c",
    "_huntingQuerycontentId7": "[variables('huntingQuerycontentId7')]",
    "huntingQueryId7": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId7'))]",
    "huntingQueryTemplateSpecName7": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId7')))]",
    "huntingQueryVersion8": "1.0.0",
    "huntingQuerycontentId8": "74e8773c-dfa9-45ca-bb60-5d767303e5b3",
    "_huntingQuerycontentId8": "[variables('huntingQuerycontentId8')]",
    "huntingQueryId8": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId8'))]",
    "huntingQueryTemplateSpecName8": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId8')))]",
    "huntingQueryVersion9": "1.0.0",
    "huntingQuerycontentId9": "c4956c0b-4527-406c-b135-ef44002e1e70",
    "_huntingQuerycontentId9": "[variables('huntingQuerycontentId9')]",
    "huntingQueryId9": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId9'))]",
    "huntingQueryTemplateSpecName9": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId9')))]",
    "huntingQueryVersion10": "1.0.0",
    "huntingQuerycontentId10": "b35f6633-0d18-494c-a5e4-2828daf442bf",
    "_huntingQuerycontentId10": "[variables('huntingQuerycontentId10')]",
    "huntingQueryId10": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId10'))]",
    "huntingQueryTemplateSpecName10": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId10')))]",
    "huntingQueryVersion11": "1.0.0",
    "huntingQuerycontentId11": "4c8d6412-5a48-42c3-8b5e-1f29fb15c749",
    "_huntingQuerycontentId11": "[variables('huntingQuerycontentId11')]",
    "huntingQueryId11": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('_huntingQuerycontentId11'))]",
    "huntingQueryTemplateSpecName11": "[concat(parameters('workspace'),'-hq-',uniquestring(variables('_huntingQuerycontentId11')))]",
    "DNS_Solution_Monitoring_Configuration": "DNS_Solution_Monitoring_Configuration",
    "_DNS_Solution_Monitoring_Configuration": "[variables('DNS_Solution_Monitoring_Configuration')]",
    "DNS_Solution_Domain_IOCs": "DNS_Solution_Domain_IOCs",
    "_DNS_Solution_Domain_IOCs": "[variables('DNS_Solution_Domain_IOCs')]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "properties": {
        "description": "DNS Essentials Workbook with template",
        "displayName": "DNS Essentials workbook template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('workbookTemplateSpecName1'),'/',variables('workbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('workbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "DNSSolutionWorkbookWorkbook Workbook with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "This workbook is included as part of DNS Essentials solution and gives a summary of analysed DNS traffic, helps with threat analysis and investigating suspicious Domains, IPs and DNS traffic analysis. DNS Essentials Solution also includes playbooks to periodically summarize the logs thus enhancing user experience and improving data search. For the effective usage of workbook, we highly recommend to enable the summarization playbooks that are provided with this solution."
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## DNS Essentials\\n---\\n\\nThe 'DNS Essentials' solution provides real-time insights into activity and potential threats in your network. This solution is designed for network teams, security architects, analysts, and consultants to monitor DNS assets as well as identify and investigate DNS threats. This Workbook gives a summary of analysed DNS traffic and helps with threat analysis and investigating suspicious domains and IPs.\"},\"name\":\"text - 2\"},{\"type\":1,\"content\":{\"json\":\"The \\\"SummarizeDNSData\\\" Playbook installed along with the solution helps in summarizing the logs and improving the performance of the Workbook and data searches. This Workbook leverages the default as well as DNS summarized data tables for visualising the data. Although enabling the summarization playbook is optional, we highly recommend enabling it for a better user experience in environments with high EPS (events per second) data ingestion. Please note that summarization would require the playbook to run on a scheduled basis to utilise this workbook's capabilities.\",\"style\":\"info\"},\"name\":\"text - 1\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"464786c8-5462-42a2-a134-431fbbc8cde0\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Time Range\",\"type\":4,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}]},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":172800000}},{\"id\":\"a477e3d3-fb34-47ad-98d8-e25df35ac13f\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Subscription\",\"type\":6,\"typeSettings\":{\"includeAll\":false},\"timeContext\":{\"durationMs\":86400000},\"value\":\"/subscriptions/4383ac89-7cd1-48c1-8061-b0b3c5ccfd97\"},{\"id\":\"36f227e1-74b9-4d57-a49c-ab48c9d6cff3\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"workspace\",\"label\":\"Workspace\",\"type\":5,\"description\":\"Select required Log Analytics Workspace\",\"isRequired\":true,\"typeSettings\":{\"resourceTypeFilter\":{\"microsoft.operationalinsights/workspaces\":true},\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 2\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"58c1e08c-2ff8-41a4-85f0-0c399d3ef36f\",\"cellValue\":\"tabVisibility\",\"linkTarget\":\"parameter\",\"linkLabel\":\"DNS Overview\",\"subTarget\":\"overview\",\"style\":\"link\"},{\"id\":\"5251d94a-1f9c-4cbc-8c7d-e7abfd3ae88a\",\"cellValue\":\"tabVisibility\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Top Queries\",\"subTarget\":\"topQueries\",\"style\":\"link\"},{\"id\":\"a816997b-65c1-4979-a0a5-ad01e00f70b2\",\"cellValue\":\"tabVisibility\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Investigate\",\"subTarget\":\"investigate\",\"style\":\"link\"}]},\"name\":\"links - 3\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_sourceInfo_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('minute',10,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n\\t  | extend EventProduct = strcat(EventVendor,\\\"-\\\",EventProduct)\\r\\n        | summarize Instances=tolong(count()) by EventProduct, bin(TimeGenerated, 6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_sourceInfo_CL\\r\\n        | where EventTime_t >= {TimeRange:start}\\r\\n        | where isnotempty(EventProduct_s)\\r\\n        | summarize Instances=tolong(sum(count__d)) by EventProduct=EventProduct_s, TimeGenerated=bin(EventTime_t, 6h)\\r\\n    )\\r\\n    | summarize Instances = sum(Instances) by EventProduct, bin(TimeGenerated, 6h)\",\"size\":1,\"title\":\"Events by Source Type over time\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\"},\"customWidth\":\"50\",\"name\":\"query - 0\",\"styleSettings\":{\"margin\":\"0\",\"padding\":\"0\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_sourceInfo_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('minute',10,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | summarize Instances=tolong(count()) by bin(TimeGenerated, 6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_sourceInfo_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | summarize Instances=tolong(sum(count__d)) by TimeGenerated=bin(EventTime_t,6h)\\r\\n    )\\r\\n    | summarize Instances = sum(Instances) by bin(TimeGenerated, 6h)\",\"size\":1,\"title\":\"DNS Events over time\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\"},\"customWidth\":\"50\",\"name\":\"query - 1\",\"styleSettings\":{\"margin\":\"0\",\"padding\":\"0\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_sourceInfo_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('minute',10,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where isnotempty(EventType)\\r\\n        | summarize SubTypeCount=tolong(count()) by EventType\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_sourceInfo_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where isnotempty(EventType_s)\\r\\n        | summarize SubTypeCount=tolong(sum(count__d)) by EventType=EventType_s\\r\\n    )\\r\\n    | summarize Sum = sum(SubTypeCount) by EventType\",\"size\":0,\"title\":\"Dns events by EventType\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"25\",\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_sourceInfo_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('minute',10,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where isnotempty(DnsQueryTypeName)\\r\\n        | summarize QueryTypeCount=tolong(count()) by DnsQueryTypeName\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_sourceInfo_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where isnotempty(DnsQueryTypeName_s)\\r\\n        | summarize QueryTypeCount=tolong(sum(count__d)) by DnsQueryTypeName=DnsQueryTypeName_s\\r\\n    )\\r\\n    | summarize Sum = sum(QueryTypeCount) by DnsQueryTypeName\\r\\n    | extend DnsQueryTypeName = case(\\r\\n    DnsQueryTypeName == \\\"A\\\", \\\"IPv4 address record\\\", \\r\\n    DnsQueryTypeName == \\\"AAAA\\\", \\\"IPv6 address record\\\",\\r\\n    DnsQueryTypeName == \\\"ANY\\\", \\\"All cached records\\\",\\r\\n    DnsQueryTypeName == \\\"CNAME\\\", \\\"Canonical name record\\\",\\r\\n    DnsQueryTypeName == \\\"MX\\\", \\\"Mail exchange record\\\",\\r\\n    DnsQueryTypeName == \\\"NS\\\", \\\"Name server record\\\",\\r\\n    DnsQueryTypeName == \\\"PTR\\\", \\\"Pointer record\\\",\\r\\n    DnsQueryTypeName == \\\"SIG\\\", \\\"Signature\\\",\\r\\n    DnsQueryTypeName == \\\"SOA\\\", \\\"Start of authority record\\\",\\r\\n    DnsQueryTypeName == \\\"SRV\\\", \\\"Service locator\\\",\\r\\n    DnsQueryTypeName == \\\"TXT\\\", \\\"Text record\\\",\\r\\n    strcat('Other'))\",\"size\":0,\"title\":\"DNS events by Query Type\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"25\",\"name\":\"query - 3\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_sourceInfo_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('minute',10,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where isnotempty(DnsQueryTypeName)\\r\\n        | summarize QueryTypeCount=tolong(count()) by DnsQueryTypeName, bin(TimeGenerated,6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_sourceInfo_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where isnotempty(DnsQueryTypeName_s)\\r\\n        | summarize QueryTypeCount=tolong(sum(count__d)) by DnsQueryTypeName=DnsQueryTypeName_s,TimeGenerated=bin(EventTime_t,6h)\\r\\n    )\\r\\n    | summarize QueryTypeCount = sum(QueryTypeCount) by DnsQueryTypeName, bin(TimeGenerated, 6h)\\r\\n    | order by TimeGenerated\",\"size\":0,\"title\":\"Query Type over time\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\"},\"customWidth\":\"50\",\"name\":\"query - 4\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_sourceInfo_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('minute',10,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where (EventSubType == 'request' or EventSubType == 'response')\\r\\n        | summarize DNSEvents=tolong(count()) by EventSubType, bin(TimeGenerated, 6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_sourceInfo_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where (EventSubType_s == 'request' or EventSubType_s == 'response')\\r\\n        | summarize DNSEvents=tolong(sum(count__d)) by EventSubType=EventSubType_s, TimeGenerated=bin(EventTime_t,6h)\\r\\n    )\\r\\n    | summarize DNSEvents = sum(DNSEvents) by EventSubType, bin(TimeGenerated, 6h)\",\"size\":1,\"title\":\"DNS - Requests Vs Responses\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"linechart\"},\"customWidth\":\"50\",\"name\":\"query - 5\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where isnotempty(DnsQuery)\\r\\n        | distinct DnsQuery, bin(TimeGenerated,6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where isnotempty(DnsQuery_s)\\r\\n        | extend DnsQuery=DnsQuery_s\\r\\n        | distinct DnsQuery, bin(TimeGenerated=EventTime_t,6h)\\r\\n    )\\r\\n    | summarize DistinctQueries=dcount(DnsQuery) by bin(TimeGenerated, 6h)\",\"size\":1,\"title\":\"Unique domains queried over time\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\"},\"customWidth\":\"50\",\"name\":\"query - 6\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where EventResultDetails == 'NXDOMAIN'\\r\\n        | summarize NXDOMAINCount=tolong(count()) by bin(TimeGenerated,6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where EventResultDetails_s == 'NXDOMAIN'\\r\\n        | summarize NXDOMAINCount=tolong(sum(count__d)) by bin(TimeGenerated=EventTime_t,6h)\\r\\n    )\\r\\n    | summarize NXDOMAINCount = sum(NXDOMAINCount) by bin(TimeGenerated, 6h)\",\"size\":0,\"title\":\"Requests to non-existent domains over time\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\"},\"customWidth\":\"50\",\"name\":\"query - 8\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where isnotempty(EventResultDetails)\\r\\n        | summarize ResultCount=tolong(count()) by EventResultDetails\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where isnotempty(EventResultDetails_s)\\r\\n        | summarize ResultCount=tolong(sum(count__d)) by EventResultDetails=EventResultDetails_s\\r\\n    )\\r\\n    | summarize ResultCount = sum(ResultCount) by EventResultDetails\",\"size\":0,\"title\":\"DNS Events by Result type\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"50\",\"name\":\"query - 9\",\"styleSettings\":{\"showBorder\":true}}]},\"conditionalVisibility\":{\"parameterName\":\"tabVisibility\",\"comparison\":\"isEqualTo\",\"value\":\"overview\"},\"name\":\"Group - DNS Overview\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nlet DNSData =    \\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where isnotempty(DnsQuery)\\r\\n        | summarize DNSEvents=tolong(count()) by DnsQuery, bin(TimeGenerated,6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where isnotempty(DnsQuery_s)\\r\\n        | summarize DNSEvents=tolong(sum(count__d)) by DnsQuery=DnsQuery_s, bin(TimeGenerated=EventTime_t,6h)\\r\\n    )\\r\\n    | summarize DNSEvents = sum(DNSEvents) by DnsQuery, bin(TimeGenerated, 6h);\\r\\n    DNSData\\r\\n    | summarize TotalCount = sum(DNSEvents) by DnsQuery\\r\\n    | join kind=inner (DNSData\\r\\n    | summarize Trend=make_set(DNSEvents,1000000) by DnsQuery\\r\\n    ) on DnsQuery\\r\\n    | project DnsQuery, TotalCount, Trend\\r\\n    | order by TotalCount desc\\r\\n    | take 25\",\"size\":1,\"title\":\"Top 25 queried Domains\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"TotalCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}}]}},\"customWidth\":\"50\",\"name\":\"query - 0\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nlet DNSData =    \\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where isnotempty(SrcIpAddr)\\r\\n        | summarize Clients=tolong(count()) by SrcIpAddr, bin(TimeGenerated,6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where isnotempty(SrcIpAddr_s)\\r\\n        | summarize Clients=tolong(sum(count__d)) by SrcIpAddr=SrcIpAddr_s, bin(TimeGenerated=EventTime_t,6h)\\r\\n    )\\r\\n    | summarize Clients = sum(Clients) by SrcIpAddr, bin(TimeGenerated, 6h);\\r\\n    DNSData\\r\\n    | summarize TotalCount = sum(Clients) by SrcIpAddr\\r\\n    | join kind=inner (DNSData\\r\\n    | summarize Trend=make_set(Clients,1000000) by SrcIpAddr\\r\\n    ) on SrcIpAddr\\r\\n    | project SrcIpAddr, TotalCount, Trend\\r\\n    | order by TotalCount desc\\r\\n    | take 25\",\"size\":1,\"title\":\"Top 25 Clients by events\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"TotalCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"orange\"}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"orange\"}}]}},\"customWidth\":\"50\",\"name\":\"query - 1\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nlet DNSData =    \\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where isnotempty(DnsQuery) and EventResultDetails == 'NXDOMAIN'\\r\\n        | summarize DNSEvents=tolong(count()) by DnsQuery, bin(TimeGenerated,6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where isnotempty(DnsQuery_s) and EventResultDetails_s == 'NXDOMAIN'\\r\\n        | summarize DNSEvents=tolong(sum(count__d)) by DnsQuery=DnsQuery_s, bin(TimeGenerated=EventTime_t,6h)\\r\\n    )\\r\\n    | summarize DNSEvents = sum(DNSEvents) by DnsQuery, bin(TimeGenerated, 6h);\\r\\n    DNSData\\r\\n    | summarize TotalCount = sum(DNSEvents) by DnsQuery\\r\\n    | join kind=inner (DNSData\\r\\n    | summarize Trend=make_set(DNSEvents,1000000) by DnsQuery\\r\\n    ) on DnsQuery\\r\\n    | project DnsQuery, TotalCount, Trend\\r\\n    | order by TotalCount desc\\r\\n    | take 25\",\"size\":1,\"title\":\"Top 25 DNSQueries resulting in non-existent Domains (NXDOMAIN)\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"TotalCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"purpleDark\"}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"purpleDark\"}}]}},\"customWidth\":\"50\",\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nlet DNSData =    \\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where isnotempty(SrcIpAddr) and EventResultDetails == 'NXDOMAIN'\\r\\n        | summarize Clients=tolong(count()) by SrcIpAddr, bin(TimeGenerated,6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where isnotempty(SrcIpAddr_s) and EventResultDetails_s == 'NXDOMAIN'\\r\\n        | summarize Clients=tolong(sum(count__d)) by SrcIpAddr=SrcIpAddr_s, bin(TimeGenerated=EventTime_t,6h)\\r\\n    )\\r\\n    | summarize Clients = sum(Clients) by SrcIpAddr, bin(TimeGenerated, 6h);\\r\\n    DNSData\\r\\n    | summarize TotalCount = sum(Clients) by SrcIpAddr\\r\\n    | join kind=inner (DNSData\\r\\n    | summarize Trend=make_set(Clients,1000000) by SrcIpAddr\\r\\n    ) on SrcIpAddr\\r\\n    | project SrcIpAddr, TotalCount, Trend\\r\\n    | order by TotalCount desc\\r\\n    | take 25\",\"size\":1,\"title\":\"Top 25 Originators for non-existent Domains (NXDOMAIN)\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"TotalCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"turquoise\"}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}}]}},\"customWidth\":\"50\",\"name\":\"query - 3\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Errors=dynamic([\\\"NXDOMAIN\\\", \\\"SERVFAIL\\\", \\\"REFUSED\\\"]);\\r\\nlet maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nlet DNSData =    \\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where isnotempty(DnsQuery) and EventResultDetails in (Errors)\\r\\n        | summarize DNSEvents=tolong(count()) by DnsQuery, bin(TimeGenerated,6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where isnotempty(DnsQuery_s) and EventResultDetails_s in (Errors)\\r\\n        | summarize DNSEvents=tolong(sum(count__d)) by DnsQuery=DnsQuery_s, bin(TimeGenerated=EventTime_t,6h)\\r\\n    )\\r\\n    | summarize DNSEvents = sum(DNSEvents) by DnsQuery, bin(TimeGenerated, 6h);\\r\\n    DNSData\\r\\n    | summarize TotalCount = sum(DNSEvents) by DnsQuery\\r\\n    | join kind=inner (DNSData\\r\\n    | summarize Trend=make_set(DNSEvents,1000000) by DnsQuery\\r\\n    ) on DnsQuery\\r\\n    | project DnsQuery, TotalCount, Trend\\r\\n    | order by TotalCount desc\\r\\n    | take 25\",\"size\":1,\"title\":\"Top 25 DNSQueries resulting in errors\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"TotalCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"brown\"}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"brown\"}}]}},\"customWidth\":\"50\",\"name\":\"query - 4\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Errors=dynamic([\\\"NXDOMAIN\\\", \\\"SERVFAIL\\\", \\\"REFUSED\\\"]);\\r\\nlet maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nlet DNSData =    \\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where isnotempty(SrcIpAddr) and EventResultDetails in (Errors)\\r\\n        | summarize Clients=tolong(count()) by SrcIpAddr, bin(TimeGenerated,6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where isnotempty(SrcIpAddr_s) and EventResultDetails_s in (Errors)\\r\\n        | summarize Clients=tolong(sum(count__d)) by SrcIpAddr=SrcIpAddr_s, bin(TimeGenerated=EventTime_t,6h)\\r\\n    )\\r\\n    | summarize Clients = sum(Clients) by SrcIpAddr, bin(TimeGenerated, 6h);\\r\\n    DNSData\\r\\n    | summarize TotalCount = sum(Clients) by SrcIpAddr\\r\\n    | join kind=inner (DNSData\\r\\n    | summarize Trend=make_set(Clients,1000000) by SrcIpAddr\\r\\n    ) on SrcIpAddr\\r\\n    | project SrcIpAddr, TotalCount, Trend\\r\\n    | order by TotalCount desc\\r\\n    | take 25\",\"size\":1,\"title\":\"Top 25 Originators for errors\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"TotalCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"magenta\"}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"magenta\"}}]}},\"customWidth\":\"50\",\"name\":\"query - 5\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SearchString = \\\"in-addr.arpa\\\";\\r\\nlet maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );  \\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where DnsQuery has SearchString and EventResultDetails=='NOERROR'\\r\\n        | summarize ReverseLookupCount=tolong(count()) by DnsQuery, EventResultDetails\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where DnsQuery_s has SearchString and EventResultDetails_s=='NOERROR'\\r\\n        | summarize ReverseLookupCount=tolong(sum(count__d)) by DnsQuery=DnsQuery_s, EventResultDetails=EventResultDetails_s\\r\\n    )\\r\\n    | summarize ReverseLookupCount = sum(ReverseLookupCount) by DnsQuery, EventResultDetails\\r\\n    | order by ReverseLookupCount\\r\\n    | take 25\",\"size\":0,\"title\":\"Top Successful Reverse Queries by Count\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\"},\"customWidth\":\"50\",\"name\":\"query - 6\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SearchDomain = \\\"in-addr.arpa\\\";\\r\\nlet maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );  \\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where DnsQuery has SearchDomain and EventResultDetails=='NXDOMAIN'\\r\\n        | summarize ReverseLookupCount=count() by DnsQuery, EventResultDetails\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where DnsQuery_s has SearchDomain and EventResultDetails_s=='NXDOMAIN'\\r\\n        | summarize ReverseLookupCount=tolong(sum(count__d)) by DnsQuery=DnsQuery_s, EventResultDetails=EventResultDetails_s\\r\\n    )\\r\\n    | summarize ReverseLookupCount = sum(ReverseLookupCount) by DnsQuery, EventResultDetails\\r\\n    | order by ReverseLookupCount\\r\\n    | take 25\",\"size\":0,\"title\":\"Top Reverse Queries by Count to Non-Existent Domains\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"query - 7\",\"styleSettings\":{\"showBorder\":true}}]},\"conditionalVisibility\":{\"parameterName\":\"tabVisibility\",\"comparison\":\"isEqualTo\",\"value\":\"topQueries\"},\"name\":\"Group - Top Queries\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"cabe7893-adaf-48d4-b1b5-f212a03a2fba\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SrcIpAddr\",\"type\":1,\"description\":\"Enter the IP to be investigated\",\"isRequired\":true,\"timeContext\":{\"durationMs\":86400000},\"value\":\"*\"},{\"id\":\"879925a8-2711-41fa-b8b9-f722ae689c54\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DnsQuery\",\"type\":1,\"description\":\"Enter DNSQuery to be investigated\",\"isRequired\":true,\"timeContext\":{\"durationMs\":86400000},\"value\":\"*\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"_Im_Dns(starttime={TimeRange:start},endtime={TimeRange:end})\\r\\n| where ('{SrcIpAddr}' == '*' or (SrcIpAddr == '{SrcIpAddr}'))\\r\\nand ('{DnsQuery}' == '*' or (DnsQuery == '{DnsQuery}'))\\r\\n| summarize count() by EventProduct\",\"size\":0,\"title\":\"Data Volume from different Sources\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"25\",\"name\":\"query - 1\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery == '{DnsQuery}'))\\r\\n        | summarize Instances=tolong(count()) by bin(TimeGenerated, 6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr_s == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery_s == '{DnsQuery}'))\\r\\n        | summarize Instances=tolong(sum(count__d)) by TimeGenerated=bin(EventTime_t,6h)\\r\\n    )\\r\\n    | summarize Instances = sum(Instances) by bin(TimeGenerated, 6h)\",\"size\":0,\"title\":\"DNS Events over time\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\"},\"customWidth\":\"25\",\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery == '{DnsQuery}'))\\r\\n        | where isnotempty(DnsQuery)\\r\\n        | distinct DnsQuery, bin(TimeGenerated,6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr_s == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery_s == '{DnsQuery}'))\\r\\n        | where isnotempty(DnsQuery_s)\\r\\n        | extend DnsQuery=DnsQuery_s\\r\\n        | distinct DnsQuery, bin(TimeGenerated=EventTime_t,6h)\\r\\n    )\\r\\n    | summarize DistinctQueries=dcount(DnsQuery) by bin(TimeGenerated, 6h)\",\"size\":0,\"title\":\"Unique domains queried over time\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\"},\"customWidth\":\"25\",\"name\":\"query - 3\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery == '{DnsQuery}'))\\r\\n        | where EventResultDetails == 'NXDOMAIN'\\r\\n        | summarize NXDOMAINCount=tolong(count()) by bin(TimeGenerated,6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr_s == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery_s == '{DnsQuery}'))\\r\\n        | where EventResultDetails_s == 'NXDOMAIN'\\r\\n        | summarize NXDOMAINCount=tolong(sum(count__d)) by bin(TimeGenerated=EventTime_t,6h)\\r\\n    )\\r\\n    | summarize NXDOMAINCount = sum(NXDOMAINCount) by bin(TimeGenerated, 6h)\",\"size\":0,\"title\":\"Requests to non-existent domains over time\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\"},\"customWidth\":\"25\",\"name\":\"query - 4\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery == '{DnsQuery}'))\\r\\n        | where isnotempty(EventResultDetails)\\r\\n        | summarize ResultCount=tolong(count()) by EventResultDetails\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr_s == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery_s == '{DnsQuery}'))\\r\\n        | where isnotempty(EventResultDetails_s)\\r\\n        | summarize ResultCount=tolong(sum(count__d)) by EventResultDetails=EventResultDetails_s\\r\\n    )\\r\\n    | summarize ResultCount = sum(ResultCount) by EventResultDetails\",\"size\":0,\"title\":\"DNS Events by Result type\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"33\",\"name\":\"query - 5\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nlet DNSData =    \\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery == '{DnsQuery}'))\\r\\n        | where isnotempty(DnsQuery)\\r\\n        | summarize DNSEvents=tolong(count()) by DnsQuery, bin(TimeGenerated,6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr_s == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery_s == '{DnsQuery}'))\\r\\n        | where isnotempty(DnsQuery_s)\\r\\n        | summarize DNSEvents=tolong(sum(count__d)) by DnsQuery=DnsQuery_s, bin(TimeGenerated=EventTime_t,6h)\\r\\n    )\\r\\n    | summarize DNSEvents = sum(DNSEvents) by DnsQuery, bin(TimeGenerated, 6h);\\r\\n    DNSData\\r\\n    | summarize TotalCount = sum(DNSEvents) by DnsQuery\\r\\n    | join kind=inner (DNSData\\r\\n    | summarize Trend=make_set(DNSEvents,1000000) by DnsQuery\\r\\n    ) on DnsQuery\\r\\n    | project DnsQuery, TotalCount, Trend\\r\\n    | order by TotalCount desc\\r\\n    | take 25\",\"size\":0,\"title\":\"Top 25 queried Domains\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"TotalCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"pink\"}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"pink\"}}]}},\"customWidth\":\"33\",\"name\":\"query - 6\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nlet DNSData =    \\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery == '{DnsQuery}'))\\r\\n        | where isnotempty(SrcIpAddr)\\r\\n        | summarize Clients=tolong(count()) by SrcIpAddr, bin(TimeGenerated,6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr_s == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery_s == '{DnsQuery}'))\\r\\n        | where isnotempty(SrcIpAddr_s)\\r\\n        | summarize Clients=tolong(sum(count__d)) by SrcIpAddr=SrcIpAddr_s, bin(TimeGenerated=EventTime_t,6h)\\r\\n    )\\r\\n    | summarize Clients = sum(Clients) by SrcIpAddr, bin(TimeGenerated, 6h);\\r\\n    DNSData\\r\\n    | summarize TotalCount = sum(Clients) by SrcIpAddr\\r\\n    | join kind=inner (DNSData\\r\\n    | summarize Trend=make_set(Clients,1000000) by SrcIpAddr\\r\\n    ) on SrcIpAddr\\r\\n    | project SrcIpAddr, TotalCount, Trend\\r\\n    | order by TotalCount desc\\r\\n    | take 25\",\"size\":0,\"title\":\"Top 25 Clients by events\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"TotalCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blueDark\"}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blueDark\"}}]}},\"customWidth\":\"33\",\"name\":\"query - 7\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\r\\n| where DomainName == \\\"{DnsQuery}\\\"\\r\\n| where Active == true\\r\\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\\r\\n| project LatestIndicatorTime, DomainName, Action, ConfidenceScore,ThreatType, ThreatSeverity, Description, ExternalIndicatorId, ExpirationDateTime, IndicatorId, TrafficLightProtocolLevel\",\"size\":0,\"title\":\"Domain Information from Threat Intelligence table\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"query - 8\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\r\\n// Picking up only IOC's that contain the entities we want\\r\\n| where isnotempty(NetworkIP) or isnotempty(EmailSourceIpAddress) or isnotempty(NetworkDestinationIP) or isnotempty(NetworkSourceIP)\\r\\n// Taking the first non-empty value based on potential IOC match availability\\r\\n| extend TI_ipEntity = coalesce(NetworkIP, NetworkDestinationIP, NetworkSourceIP,EmailSourceIpAddress,\\\"\\\")\\r\\n| where TI_ipEntity=='{SrcIpAddr}' and Active == true\\r\\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\\r\\n| project LatestIndicatorTime, TI_ipEntity, Action, ConfidenceScore,ThreatType, ThreatSeverity, Description, ExternalIndicatorId, ExpirationDateTime, IndicatorId, TrafficLightProtocolLevel\",\"size\":0,\"title\":\"IP information from Threat Intelligence table\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"query - 9\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SecurityAlert\\r\\n| where Entities has \\\"{SrcIpAddr}\\\" or Entities has \\\"{DnsQuery}\\\"\\r\\n| project TimeGenerated, DisplayName, AlertName, AlertSeverity, ProviderName, VendorName, SystemAlertId, StartTime, EndTime, todynamic(ExtendedProperties), Entities\",\"size\":0,\"title\":\"Security alerts with searched IP or DNS query\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"query - 10\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery == '{DnsQuery}'))\\r\\n        | where isnotempty(DnsQuery)\\r\\n        | extend QueryLength = strlen(DnsQuery)\\r\\n        | summarize TotalCount=tolong(count()) by QueryLength, SrcIpAddr\\r\\n        | order by QueryLength, TotalCount desc\\r\\n        | project SrcIpAddr, QueryLength, TotalCount\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr_s == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery_s == '{DnsQuery}'))\\r\\n        | where isnotempty(DnsQuery_s)\\r\\n        | extend QueryLength = strlen(DnsQuery_s)\\r\\n        | summarize TotalCount=tolong(sum(count__d)) by QueryLength, SrcIpAddr=SrcIpAddr_s\\r\\n        | order by QueryLength, TotalCount desc\\r\\n        | project SrcIpAddr, QueryLength, TotalCount\\r\\n    )\\r\\n    | summarize TotalCount = sum(TotalCount) by SrcIpAddr, QueryLength\\r\\n    | where isnotempty(SrcIpAddr)\\r\\n    | order by QueryLength, TotalCount desc\\r\\n    | take 10\\r\\n    \",\"size\":0,\"title\":\"Query length by SrcIpAddr\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"scatterchart\",\"chartSettings\":{\"showLegend\":true}},\"customWidth\":\"50\",\"name\":\"query - 11\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let maxSummarizedTime = toscalar (\\r\\n    union isfuzzy=true \\r\\n        (\\r\\n            DNS_Summarized_Logs_ip_CL\\r\\n                | where EventTime_t >= {TimeRange:start}\\r\\n                | summarize max_TimeGenerated=max(EventTime_t)\\r\\n                | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\\r\\n        ),\\r\\n        (\\r\\n            print({TimeRange:start})\\r\\n            | extend max_TimeGenerated = print_0\\r\\n            | project max_TimeGenerated\\r\\n        )\\r\\n        | summarize maxTimeGenerated = max(max_TimeGenerated) \\r\\n    );\\r\\nlet DNSData =    \\r\\nunion isfuzzy=true \\r\\n    (\\r\\n        _Im_Dns(starttime=todatetime(maxSummarizedTime), endtime=now())\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery == '{DnsQuery}'))\\r\\n        | where isnotempty(DnsQuery)\\r\\n        | summarize DNSEvents=tolong(count()) by DnsQuery, bin(TimeGenerated,6h)\\r\\n    ),\\r\\n    (\\r\\n        DNS_Summarized_Logs_ip_CL\\r\\n        | where TimeGenerated >= {TimeRange:start}\\r\\n        | where ('{SrcIpAddr}' == '*' or (SrcIpAddr_s == '{SrcIpAddr}'))\\r\\n            and ('{DnsQuery}' == '*' or (DnsQuery_s == '{DnsQuery}'))\\r\\n        | where isnotempty(DnsQuery_s)\\r\\n        | summarize DNSEvents=tolong(sum(count__d)) by DnsQuery=DnsQuery_s, bin(TimeGenerated=EventTime_t,6h)\\r\\n    )\\r\\n    | summarize DNSEvents = sum(DNSEvents) by DnsQuery, bin(TimeGenerated, 6h);\\r\\n    DNSData\\r\\n    //Break the domain into its parts\\r\\n    | extend DomainParts = split(DnsQuery,'.')\\r\\n    //Use the rightmost parts of the URL\\r\\n    | extend Top_Level_Domain =  strcat(DomainParts[toint(array_length(DomainParts)-2)],'.',DomainParts[toint(array_length(DomainParts)-1)])\\r\\n    //If the two right most parts are too short (e.g. \\\"co.uk\\\" or \\\"com.tr\\\", add another part\\r\\n    | extend Top_Level_Domain = iif(strlen(Top_Level_Domain)<7,strcat(DomainParts[toint(array_length(DomainParts)-3)],'.',Top_Level_Domain),Top_Level_Domain)\\r\\n    | summarize SubDomainRequestCount = toint(sum(DNSEvents)) by Top_Level_Domain, DnsQuery\\r\\n    | join kind=inner \\r\\n    (\\r\\n            DNSData\\r\\n            //Break the domain into its parts\\r\\n            | extend DomainParts = split(DnsQuery,'.')\\r\\n            //Use the rightmost parts of the URL\\r\\n            | extend Top_Level_Domain =  strcat(DomainParts[toint(array_length(DomainParts)-2)],'.',DomainParts[toint(array_length(DomainParts)-1)])\\r\\n            //If the two right most parts are too short (e.g. \\\"co.uk\\\" or \\\"com.tr\\\", add another part\\r\\n            | extend Top_Level_Domain = iif(strlen(Top_Level_Domain)<7,strcat(DomainParts[toint(array_length(DomainParts)-3)],'.',Top_Level_Domain),Top_Level_Domain)\\r\\n            | summarize DomainRequestCount = toint(sum(DNSEvents)) by Top_Level_Domain\\r\\n    ) on Top_Level_Domain\\r\\n    | extend pk = SubDomainRequestCount/todouble(DomainRequestCount)\\r\\n    //calculate entropy according to Shannon function https://en.wiktionary.org/wiki/Shannon_entropy\\r\\n    | extend h1= -log2(pk)*pk\\r\\n    | summarize SubDomainEntropy = sum(h1), DomainRequestCount = any(DomainRequestCount) ,DNSQueries=make_list(DnsQuery)  by TopLevelDomain=Top_Level_Domain\\r\\n    | order by SubDomainEntropy desc\\r\\n    | take 25\",\"size\":0,\"title\":\"Domain entropy\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SubDomainEntropy\",\"formatter\":8,\"formatOptions\":{\"palette\":\"coldHot\"}},{\"columnMatch\":\"TotalSubDomains\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blueDark\"}},{\"columnMatch\":\"DNSQueries\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"75%\"}},{\"columnMatch\":\"Sub_Domain_Entropy\",\"formatter\":8,\"formatOptions\":{\"palette\":\"coldHot\"}},{\"columnMatch\":\"Total_Sub_Domains\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blueDark\"}},{\"columnMatch\":\"list_DnsQuery\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"75%\"}}]}},\"name\":\"query - 12\"}]},\"conditionalVisibility\":{\"parameterName\":\"tabVisibility\",\"comparison\":\"isEqualTo\",\"value\":\"investigate\"},\"name\":\"Group - IP Investigate\"}],\"fromTemplateId\":\"sentinel-DNSDomainSolution\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=DNSSolutionWorkbook; logoFileName=; description=This workbook is included as part of DNS Essentials solution and gives a summary of analysed DNS traffic, helps with threat analysis and investigating suspicious Domains, IPs and DNS traffic analysis. DNS Essentials Solution also includes playbooks to periodically summarize the logs thus enhancing user experience and improving data search. For the effective usage of workbook, we highly recommend to enable the summarization playbooks that are provided with this solution.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=DNS Solution Workbook; templateRelativePath=DNSSolutionWorkbook.json; subtitle=; provider=Microsoft}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "GCPCloudDNS",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "AzureDiagnostics",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Cisco_Umbrella_proxy_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Corelight",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Syslog",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "NXLog_DNS_Server_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "DnsEvents",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "VectraStream",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "CommonSecurityLog",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "GCPDNSDataConnector",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "AzureFirewall",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "CiscoUmbrellaDataConnector",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "Corelight",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "InfobloxNIOS",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "NXLogDnsLogs",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "DNS",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "AIVectraStream",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "Zscaler",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "ISCBind",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "DNS Essentials Analytics Rule 1 with template",
        "displayName": "DNS Essentials Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName1'),'/',variables('analyticRuleVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "DNSRequestToKnownDomainIOCs_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId1')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This rule identifies DNS requests to known domain IOCs in the [DNS query](https://learn.microsoft.com/azure/sentinel/normalization-schema-dns#query) logs. It evaluates DNS logs against 100+ known IOCs from the available Watchlist, which helps detect an attempt to communicate with known compromised domains.\\\\n\\\\nIt utilizes [ASIM](https://aka.ms/AboutASIM) normalization and is applied to any source that supports the ASIM DNS schema.",
                "displayName": "Detect DNS requests to known Domain IOCs (ASIM DNS Solution)",
                "enabled": false,
                "query": "let lookback = 1h;\nlet DNS_IOCs = materialize(_GetWatchlist('DNS_Solution_Domain_IOCs')\n  | where wl_Type == 'Detection' and wl_Enabled == 'TRUE'\n  | project\n      wl_DNSDomain,\n      wl_Name,\n      wl_Description,\n      wl_Type,\n      wl_ThresholdType,\n      wl_Threshold,\n      wl_Severity,\n      wl_Tactic,\n      wl_Enabled);\nlet Dynamic_DomainList=DNS_IOCs | summarize  make_set(wl_DNSDomain);\n_Im_Dns(starttime=ago(lookback),domain_has_any=toscalar(Dynamic_DomainList))\n| join kind=inner['DNS_IOCs'] where DnsQuery has wl_DNSDomain\n| project\n  SrcIpAddr,\n  DnsQuery,\n  EventResultDetails,\n  Name=wl_Name,\n  Description=wl_Description,\n  TimeGenerated,\n  Tactic=wl_Tactic,\n  Severity=wl_Severity\n| summarize Count=count(), EventStartTime=min(TimeGenerated), EventEndTime=max(TimeGenerated) by SrcIpAddr,DnsQuery, EventResultDetails, Name, Description, Tactic, Severity\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "ASimDnsActivityLogs"
                    ],
                    "connectorId": "ASimDnsActivityLogs"
                  },
                  {
                    "dataTypes": [
                      "GCP_DNS_CL"
                    ],
                    "connectorId": "GCPDNSDataConnector"
                  },
                  {
                    "dataTypes": [
                      "AzureDiagnostics"
                    ],
                    "connectorId": "AzureFirewall"
                  },
                  {
                    "dataTypes": [
                      "Cisco_Umbrella_proxy_CL"
                    ],
                    "connectorId": "CiscoUmbrellaDataConnector"
                  },
                  {
                    "dataTypes": [
                      "Corelight_CL"
                    ],
                    "connectorId": "Corelight"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "InfobloxNIOS"
                  },
                  {
                    "dataTypes": [
                      "NXLog_DNS_Server_CL"
                    ],
                    "connectorId": "NXLogDnsLogs"
                  },
                  {
                    "dataTypes": [
                      "DnsEvents"
                    ],
                    "connectorId": "DNS"
                  },
                  {
                    "dataTypes": [
                      "VectraStream_CL"
                    ],
                    "connectorId": "AIVectraStream"
                  },
                  {
                    "dataTypes": [
                      "WindowsEvents"
                    ],
                    "connectorId": "WindowsForwardedEvents"
                  },
                  {
                    "dataTypes": [
                      "CommonSecurityLog"
                    ],
                    "connectorId": "Zscaler"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "ISCBind"
                  }
                ],
                "tactics": [
                  "Impact",
                  "CommandAndControl",
                  "Exfiltration",
                  "PrivilegeEscalation",
                  "InitialAccess",
                  "CredentialAccess"
                ],
                "techniques": [
                  "T1496",
                  "T1048",
                  "T1568",
                  "T1095",
                  "T1567",
                  "T1068",
                  "T1566",
                  "T1187",
                  "T1195"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "DomainName",
                        "columnName": "DnsQuery"
                      }
                    ],
                    "entityType": "DNS"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SrcIpAddr"
                      }
                    ],
                    "entityType": "IP"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "'{{Name}}' was detected. From client: '{{SrcIpAddr}}'",
                  "alertTacticsColumnName": "Tactic",
                  "alertSeverityColumnName\"": "Severity",
                  "alertDescriptionFormat": "Alert Description: '{{Description}}'\n\nClient '{(SrcIpAddr)}' was detected as making request to '{(DnsQuery)}'"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId1'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Analytics Rule 1",
                "parentId": "[variables('analyticRuleId1')]",
                "contentId": "[variables('_analyticRulecontentId1')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "DNS Essentials Analytics Rule 2 with template",
        "displayName": "DNS Essentials Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName2'),'/',variables('analyticRuleVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "ExcessiveNXDOMAINDNSQueriesAnomalyBased_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId2')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This rule makes use of the series decompose anomaly method to generate an alert when client requests excessive amount of DNS queries to non-existent domains. This helps in identifying possible C2 communications. \\n\\nIt utilizes [ASIM](https://aka.ms/AboutASIM) normalization and is applied to any source that supports the ASIM DNS schema.",
                "displayName": "Detect excessive NXDOMAIN DNS queries - Anomaly based (ASIM DNS Solution)",
                "enabled": false,
                "query": "let threshold = materialize (_GetWatchlist('DNS_Solution_Monitoring_Configuration')\n  | where wl_RuleName == 'Anomaly - Excessive NXDOMAIN DNS Queries'\n      and wl_Type == 'Detection'\n  | project todouble(wl_AnomalyThreshold));\nlet min_t = ago(14d);\nlet max_t = now();\nlet dt = 1d;\nlet summarizationexist = (\n  union isfuzzy=true \n      (\n      DNS_Summarized_Logs_ip_CL\n      | where EventTime_t > ago(1d) \n      | project v = int(2)\n      ),\n      (\n      print int(1) \n      | project v = print_0\n      )\n  | summarize maxv = max(v)\n  | extend sumexist = (maxv > 1)\n  );\nlet allData = union isfuzzy=true\n      (\n      (datatable(exists: int, sumexist: bool)[1, false]\n      | join (summarizationexist) on sumexist)\n      | join (\n          _Im_Dns(responsecodename='NXDOMAIN', starttime=todatetime(min_t), endtime=max_t)\n          | summarize Count=count() by SrcIpAddr, bin(TimeGenerated, 1h)\n          | extend EventTime = TimeGenerated, Count = toint(Count), exists=int(1)\n          )\n          on exists\n      | project-away exists, maxv, sum*\n      ),\n      (\n      DNS_Summarized_Logs_ip_CL\n      | where EventTime_t > min_t and EventResultDetails_s == 'NXDOMAIN'\n      | summarize Count=toint(sum(count__d)) by SrcIpAddr=SrcIpAddr_s, bin(EventTime=EventTime_t, 1h)\n      );\nallData\n| make-series EventCount=sum(Count) on EventTime from min_t to max_t step dt by SrcIpAddr\n| extend (anomalies, score, baseline) = series_decompose_anomalies(EventCount, toscalar(threshold), -1, 'linefit')\n| mv-expand anomalies, score, baseline, EventTime, EventCount\n| extend\n  anomalies = toint(anomalies),\n  score = toint(score),\n  baseline = toint(baseline),\n  EventTime = todatetime(EventTime),\n  Total = tolong(EventCount)\n| where EventTime >= ago(dt)\n| where score >= (toscalar(threshold) * 2)\n| join kind=inner(_Im_Dns(responsecodename='NXDOMAIN', starttime=ago(dt), endtime=max_t)\n  | summarize DNSQueries = make_set(DnsQuery) by SrcIpAddr)\n  on SrcIpAddr\n| project-away SrcIpAddr1\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P14D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "ASimDnsActivityLogs"
                    ],
                    "connectorId": "ASimDnsActivityLogs"
                  },
                  {
                    "dataTypes": [
                      "GCP_DNS_CL"
                    ],
                    "connectorId": "GCPDNSDataConnector"
                  },
                  {
                    "dataTypes": [
                      "AzureDiagnostics"
                    ],
                    "connectorId": "AzureFirewall"
                  },
                  {
                    "dataTypes": [
                      "Cisco_Umbrella_proxy_CL"
                    ],
                    "connectorId": "CiscoUmbrellaDataConnector"
                  },
                  {
                    "dataTypes": [
                      "Corelight_CL"
                    ],
                    "connectorId": "Corelight"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "InfobloxNIOS"
                  },
                  {
                    "dataTypes": [
                      "NXLog_DNS_Server_CL"
                    ],
                    "connectorId": "NXLogDnsLogs"
                  },
                  {
                    "dataTypes": [
                      "DnsEvents"
                    ],
                    "connectorId": "DNS"
                  },
                  {
                    "dataTypes": [
                      "VectraStream_CL"
                    ],
                    "connectorId": "AIVectraStream"
                  },
                  {
                    "dataTypes": [
                      "WindowsEvents"
                    ],
                    "connectorId": "WindowsForwardedEvents"
                  },
                  {
                    "dataTypes": [
                      "CommonSecurityLog"
                    ],
                    "connectorId": "Zscaler"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "ISCBind"
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "techniques": [
                  "T1568",
                  "T1008"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SrcIpAddr"
                      }
                    ],
                    "entityType": "IP"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "DNSQueries": "DNSQueries",
                  "baseline": "baseline",
                  "Total": "Total",
                  "AnomalyScore": "score"
                },
                "alertDetailsOverride": {
                  "alertDescriptionFormat": "This client is generating excessive amount of DNS queries for non-existent domains. This can be an indication of possible C2 communications.\n\nBaseline for 'NXDOMAIN' error count for this client: '{{baseline}}'\n\nCurrent 'NXDOMAIN' error count for this client: '{{Total}}'\n\nDNS queries requested by the client include:\n\n'{{DNSQueries}}'",
                  "alertDisplayNameFormat": "[Anomaly] Excessive NXDOMAIN DNS Queries has been detected from client IP: '{{SrcIpAddr}}'"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId2'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Analytics Rule 2",
                "parentId": "[variables('analyticRuleId2')]",
                "contentId": "[variables('_analyticRulecontentId2')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "DNS Essentials Analytics Rule 3 with template",
        "displayName": "DNS Essentials Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName3'),'/',variables('analyticRuleVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "ExcessiveNXDOMAINDNSQueriesStaticThresholdBased_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId3')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This rule generates an alert when the configured threshold for DNS queries to non-existent domains is breached. This helps in identifying possible C2 communications. \\n\\nIt utilizes [ASIM](https://aka.ms/AboutASIM) normalization and is applied to any source that supports the ASIM DNS schema.",
                "displayName": "Detect excessive NXDOMAIN DNS queries - Static threshold based (ASIM DNS Solution)",
                "enabled": false,
                "query": "let lookback = 1h;\nlet threshold = materialize (_GetWatchlist('DNS_Solution_Monitoring_Configuration')\n  | where wl_RuleName == 'Excessive NXDOMAIN DNS Queries'\n      and wl_Type == 'Detection'\n  | project threshold=toint(wl_Threshold));\n_Im_Dns(starttime=ago(lookback), responsecodename='NXDOMAIN')\n| summarize NXDOMAINCount=count() by SrcIpAddr, bin(TimeGenerated, 15m)\n| where NXDOMAINCount > toscalar(threshold)\n| join kind=inner (_Im_Dns(starttime=ago(lookback), responsecodename='NXDOMAIN')\n  | summarize DNSQueries = makeset(DnsQuery) by SrcIpAddr)\n  on SrcIpAddr\n| extend NXDOMAINthreshold=toint(toscalar(threshold))\n| project-away SrcIpAddr1\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "ASimDnsActivityLogs"
                    ],
                    "connectorId": "ASimDnsActivityLogs"
                  },
                  {
                    "dataTypes": [
                      "GCP_DNS_CL"
                    ],
                    "connectorId": "GCPDNSDataConnector"
                  },
                  {
                    "dataTypes": [
                      "AzureDiagnostics"
                    ],
                    "connectorId": "AzureFirewall"
                  },
                  {
                    "dataTypes": [
                      "Cisco_Umbrella_proxy_CL"
                    ],
                    "connectorId": "CiscoUmbrellaDataConnector"
                  },
                  {
                    "dataTypes": [
                      "Corelight_CL"
                    ],
                    "connectorId": "Corelight"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "InfobloxNIOS"
                  },
                  {
                    "dataTypes": [
                      "NXLog_DNS_Server_CL"
                    ],
                    "connectorId": "NXLogDnsLogs"
                  },
                  {
                    "dataTypes": [
                      "DnsEvents"
                    ],
                    "connectorId": "DNS"
                  },
                  {
                    "dataTypes": [
                      "VectraStream_CL"
                    ],
                    "connectorId": "AIVectraStream"
                  },
                  {
                    "dataTypes": [
                      "WindowsEvents"
                    ],
                    "connectorId": "WindowsForwardedEvents"
                  },
                  {
                    "dataTypes": [
                      "CommonSecurityLog"
                    ],
                    "connectorId": "Zscaler"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "ISCBind"
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "techniques": [
                  "T1568",
                  "T1008"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SrcIpAddr"
                      }
                    ],
                    "entityType": "IP"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "NXDOMAINCount": "NXDOMAINCount",
                  "DNSQueries": "DNSQueries",
                  "NXDOMAINthreshold": "NXDOMAINthreshold"
                },
                "alertDetailsOverride": {
                  "alertDescriptionFormat": "Client is generating excessive amount of DNS queries for non-existent domains. This can be an indication of possible C2 communications. \n\n'NXDOMAIN' error count threshold: '{{NXDOMAINthreshold}}'\n\nCurrent 'NXDOMAIN' error count from this client: '{{NXDOMAINCount}}'\n\nDNS queries requested by the client include:\n\n'{{DNSQueries}}'",
                  "alertDisplayNameFormat": "[Static threshold] Excessive NXDOMAIN DNS Queries has been detected from client IP: '{{SrcIpAddr}}'"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId3'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Analytics Rule 3",
                "parentId": "[variables('analyticRuleId3')]",
                "contentId": "[variables('_analyticRulecontentId3')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "DNS Essentials Analytics Rule 4 with template",
        "displayName": "DNS Essentials Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName4'),'/',variables('analyticRuleVersion4'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName4'))]"
      ],
      "properties": {
        "description": "MultipleErrorsReportedForSameDNSQueryAnomalyBased_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion4')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId4')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This rule makes use of the series decompose anomaly method to generate an alert when multiple clients report errors for the same DNS query. This rule monitors DNS traffic over a period of 14 days to detect possible similar C2 communication originating from different clients. \\n\\nIt utilizes [ASIM](https://aka.ms/AboutASIM) normalization and is applied to any source that supports the ASIM DNS schema.",
                "displayName": "Detect DNS queries reporting multiple errors from different clients - Anomaly Based (ASIM DNS Solution)",
                "enabled": false,
                "query": "let threshold = materialize (_GetWatchlist('DNS_Solution_Monitoring_Configuration')\n  | where wl_RuleName == 'Anomaly - Multiple errors reported for same DNSQuery'\n      and wl_Type == 'Detection'\n  | project todouble(wl_AnomalyThreshold));\nlet min_t = ago(14d);\nlet max_t = now();\nlet dt = 1d;\nlet Errors = dynamic(['NXDOMAIN', 'SERVFAIL', 'REFUSED']);\n// calculate avg. eps(events per second)\nlet eps = materialize (_Im_Dns | project TimeGenerated | where TimeGenerated > ago(5m) | count | extend Count = Count/300);\nlet maxSummarizedTime = toscalar (\n  union isfuzzy=true \n      (\n          DNS_Summarized_Logs_ip_CL \n              | where EventTime_t >= min_t\n              | summarize max_TimeGenerated=max(EventTime_t)\n              | extend max_TimeGenerated = datetime_add('hour',1,max_TimeGenerated)\n      ),\n      (\n          print(min_t)\n          | project max_TimeGenerated = print_0\n      )\n    | summarize maxTimeGenerated = max(max_TimeGenerated) \n  );\n  let summarizationexist = materialize(\n            union isfuzzy=true \n              (\n                  DNS_Summarized_Logs_ip_CL\n                  | where EventTime_t > ago(1d) \n                  | project v = int(2)\n              ),\n              (\n                  print int(1) \n                  | project v = print_0\n              )\n              | summarize maxv = max(v)\n              | extend sumexist = (maxv > 1)\n            );\nlet allData = union isfuzzy=true\n(\n  (datatable(exists:int, sumexist:bool)[1,false] | where toscalar(eps) > 1000 | join (summarizationexist) on sumexist) | join (\n  _Im_Dns(starttime=todatetime(ago(2d)), endtime=now())\n  | where TimeGenerated > maxSummarizedTime and EventResultDetails in (Errors)\n  | summarize Count=count() by SrcIpAddr, DnsQuery, bin(TimeGenerated,1h)\n  | extend EventTime = TimeGenerated, Count = toint(Count), exists=int(1)\n  ) on exists\n  | project-away exists, maxv, sum*\n),\n(\n  (datatable(exists:int, sumexist:bool)[1,false] | where toscalar(eps) between (501 .. 1000) | join (summarizationexist) on sumexist) | join (\n  _Im_Dns(starttime=todatetime(ago(3d)), endtime=now())\n  | where TimeGenerated > maxSummarizedTime and EventResultDetails in (Errors)\n  | summarize Count=count() by SrcIpAddr, DnsQuery, bin(TimeGenerated,1h)\n  | extend EventTime = TimeGenerated, Count = toint(Count), exists=int(1)\n  ) on exists\n  | project-away exists, maxv, sum*\n),\n(\n  (datatable(exists:int, sumexist:bool)[1,false] | where toscalar(eps) <= 500 | join (summarizationexist) on sumexist) | join (\n  _Im_Dns(starttime=todatetime(ago(4d)), endtime=now())\n  | where TimeGenerated > maxSummarizedTime and EventResultDetails in (Errors)\n  | summarize Count=count() by SrcIpAddr, DnsQuery, bin(TimeGenerated,1h)\n  | extend EventTime = TimeGenerated, Count = toint(Count), exists=int(1)\n  ) on exists\n  | project-away exists, maxv, sum*\n),\n(\n      DNS_Summarized_Logs_ip_CL\n      | where EventTime_t > min_t and EventResultDetails_s in (Errors)\n      | project-rename SrcIpAddr=SrcIpAddr_s, DnsQuery=DnsQuery_s, Count=count__d, EventTime=EventTime_t\n      | extend Count = toint(Count) \n);\nallData\n| make-series TotalIPCount=dcount(SrcIpAddr) on EventTime from min_t to max_t step dt by DnsQuery\n| extend (anomalies, score, baseline) = series_decompose_anomalies(TotalIPCount, toscalar(threshold), -1, 'linefit')\n| mv-expand anomalies, score, baseline, EventTime, TotalIPCount\n| extend\n  anomalies = toint(anomalies),\n  score = toint(score),\n  baseline = toint(baseline),\n  EventTime = todatetime(EventTime),\n  TotalIPs = tolong(TotalIPCount)\n| where EventTime >= ago(dt)\n| where score >= (toscalar(threshold) * 2)\n| join kind=inner(allData | where TimeGenerated>ago(dt) | summarize SrcIps = make_set(SrcIpAddr,1000) by DnsQuery) on DnsQuery\n| project-away DnsQuery1\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P14D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "ASimDnsActivityLogs"
                    ],
                    "connectorId": "ASimDnsActivityLogs"
                  },
                  {
                    "dataTypes": [
                      "GCP_DNS_CL"
                    ],
                    "connectorId": "GCPDNSDataConnector"
                  },
                  {
                    "dataTypes": [
                      "AzureDiagnostics"
                    ],
                    "connectorId": "AzureFirewall"
                  },
                  {
                    "dataTypes": [
                      "Cisco_Umbrella_proxy_CL"
                    ],
                    "connectorId": "CiscoUmbrellaDataConnector"
                  },
                  {
                    "dataTypes": [
                      "Corelight_CL"
                    ],
                    "connectorId": "Corelight"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "InfobloxNIOS"
                  },
                  {
                    "dataTypes": [
                      "NXLog_DNS_Server_CL"
                    ],
                    "connectorId": "NXLogDnsLogs"
                  },
                  {
                    "dataTypes": [
                      "DnsEvents"
                    ],
                    "connectorId": "DNS"
                  },
                  {
                    "dataTypes": [
                      "VectraStream_CL"
                    ],
                    "connectorId": "AIVectraStream"
                  },
                  {
                    "dataTypes": [
                      "WindowsEvents"
                    ],
                    "connectorId": "WindowsForwardedEvents"
                  },
                  {
                    "dataTypes": [
                      "CommonSecurityLog"
                    ],
                    "connectorId": "Zscaler"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "ISCBind"
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "techniques": [
                  "T1568",
                  "T1573",
                  "T1008"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "DomainName",
                        "columnName": "DnsQuery"
                      }
                    ],
                    "entityType": "DNS"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "TotalIPs": "TotalIPs",
                  "baseline": "baseline",
                  "SrcIps": "SrcIps",
                  "AnomalyScore": "score"
                },
                "alertDetailsOverride": {
                  "alertDescriptionFormat": "Multiple errors were detected on different clients for the same DNS query. These unsuccessful responses can be an indication of C2 communication. \n\nBaseline for total clients reporting errors for this DNS query: '{{baseline}}'\n\nCurrent count of clients reporting errors for this DNS query: '{{TotalIPs}}'\n\nClients requesting this DNS query include:\n'{{SrcIps}}'",
                  "alertDisplayNameFormat": "[Anomaly] Multiple errors for the same DNS query has been detected - '{{DnsQuery}}'"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId4'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Analytics Rule 4",
                "parentId": "[variables('analyticRuleId4')]",
                "contentId": "[variables('_analyticRulecontentId4')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "DNS Essentials Analytics Rule 5 with template",
        "displayName": "DNS Essentials Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName5'),'/',variables('analyticRuleVersion5'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName5'))]"
      ],
      "properties": {
        "description": "MultipleErrorsReportedForSameDNSQueryStaticThresholdBased_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion5')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId5')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This rule creates an alert when multiple clients report errors for the same DNS query. This helps in identifying possible similar C2 communications originating from different clients.\\n\\nIt utilizes [ASIM](https://aka.ms/AboutASIM) normalization and is applied to any source that supports the ASIM DNS schema.",
                "displayName": "Detect DNS queries reporting multiple errors from different clients - Static threshold based (ASIM DNS Solution)",
                "enabled": false,
                "query": "let lookback=1h;\nlet threshold = materialize (_GetWatchlist('DNS_Solution_Monitoring_Configuration')\n  | where wl_RuleName == 'Multiple errors reported for same DNSQuery' and wl_Type == 'Detection'\n  | project toint(wl_Threshold));\nlet errors = dynamic(['NXDOMAIN', 'SERVFAIL', 'REFUSED']);\n_Im_Dns(starttime=ago(lookback))\n  | where EventResultDetails has_any (errors)\n  | summarize SrcIPs = make_set(SrcIpAddr, 100) by DnsQuery, bin(TimeGenerated, 10min)\n  | where array_length(SrcIPs) >= toscalar(threshold)\n  | extend TotalIPs = array_length(SrcIPs),IPCountthreshold = toscalar(threshold)\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "ASimDnsActivityLogs"
                    ],
                    "connectorId": "ASimDnsActivityLogs"
                  },
                  {
                    "dataTypes": [
                      "GCP_DNS_CL"
                    ],
                    "connectorId": "GCPDNSDataConnector"
                  },
                  {
                    "dataTypes": [
                      "AzureDiagnostics"
                    ],
                    "connectorId": "AzureFirewall"
                  },
                  {
                    "dataTypes": [
                      "Cisco_Umbrella_proxy_CL"
                    ],
                    "connectorId": "CiscoUmbrellaDataConnector"
                  },
                  {
                    "dataTypes": [
                      "Corelight_CL"
                    ],
                    "connectorId": "Corelight"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "InfobloxNIOS"
                  },
                  {
                    "dataTypes": [
                      "NXLog_DNS_Server_CL"
                    ],
                    "connectorId": "NXLogDnsLogs"
                  },
                  {
                    "dataTypes": [
                      "DnsEvents"
                    ],
                    "connectorId": "DNS"
                  },
                  {
                    "dataTypes": [
                      "VectraStream_CL"
                    ],
                    "connectorId": "AIVectraStream"
                  },
                  {
                    "dataTypes": [
                      "WindowsEvents"
                    ],
                    "connectorId": "WindowsForwardedEvents"
                  },
                  {
                    "dataTypes": [
                      "CommonSecurityLog"
                    ],
                    "connectorId": "Zscaler"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "ISCBind"
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "techniques": [
                  "T1568",
                  "T1573",
                  "T1008"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "DomainName",
                        "columnName": "DnsQuery"
                      }
                    ],
                    "entityType": "DNS"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "TotalIPs": "TotalIPs",
                  "IPCountthreshold": "IPCountthreshold",
                  "SrcIPs": "SrcIPs"
                },
                "alertDetailsOverride": {
                  "alertDescriptionFormat": "Multiple errors were detected on different clients for the same DNS query. These unsuccessful responses can be an indication of C2 communication. \n\nThreshold for total clients reporting errors: '{{IPCountthreshold}}'\n\nCurrent count of clients reporting errors for this DNS query: '{{TotalIPs}}'\n\nClients requesting this DNSQuery include:\n\n'{{SrcIPs}}'",
                  "alertDisplayNameFormat": "[Static threshold] Multiple errors for the same DNS query has been detected - '{{DnsQuery}}'"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId5'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Analytics Rule 5",
                "parentId": "[variables('analyticRuleId5')]",
                "contentId": "[variables('_analyticRulecontentId5')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "DNS Essentials Analytics Rule 6 with template",
        "displayName": "DNS Essentials Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName6'),'/',variables('analyticRuleVersion6'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName6'))]"
      ],
      "properties": {
        "description": "PotentialDGADetectedviaRepetitiveFailuresAnomalyBased_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion6')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId6')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This rule makes use of the series decompose anomaly method to detect clients with a high NXDomain response count, which could be indicative of a DGA (cycling through possible C2 domains where most C2s are not live). An alert is generated when new IP address DNS activity is identified as an outlier when compared to the baseline, indicating a recurring pattern. \\n\\nIt utilizes [ASIM](https://aka.ms/AboutASIM) normalization and is applied to any source that supports the ASIM DNS schema.",
                "displayName": "Potential DGA(Domain Generation Algorithm) detected via Repetitive Failures - Anomaly based (ASIM DNS Solution)",
                "enabled": false,
                "query": "let threshold = materialize (_GetWatchlist('DNS_Solution_Monitoring_Configuration')\n  | where wl_RuleName == 'Anomaly - Potential DGA(Domain Generation Algorithm) detected'\n      and wl_Type == 'Detection'\n  | project todouble(wl_AnomalyThreshold));\nlet min_t = ago(14d);\nlet max_t = now();\nlet timeframe = 1d;\n// calculate avg. eps(events per second)\nlet eps = materialize (_Im_Dns\n  | project TimeGenerated\n  | where TimeGenerated > ago(5m)\n  | count\n  | extend Count = Count / 300);\nlet maxSummarizedTime = toscalar (\n  union isfuzzy=true \n      (\n      DNS_Summarized_Logs_ip_CL \n      | where EventTime_t >= min_t\n      | summarize max_TimeGenerated=max(EventTime_t)\n      | extend max_TimeGenerated = datetime_add('hour', 1, max_TimeGenerated)\n      ),\n      (\n      print(min_t)\n      | project max_TimeGenerated = print_0\n      )\n  | summarize maxTimeGenerated = max(max_TimeGenerated) \n  );\nlet summarizationexist = materialize(\n  union isfuzzy=true \n      (\n      DNS_Summarized_Logs_ip_CL\n      | where EventTime_t > ago(1d) \n      | project v = int(2)\n      ),\n      (\n      print int(1) \n      | project v = print_0\n      )\n  | summarize maxv = max(v)\n  | extend sumexist = (maxv > 1)\n  );\nlet allData = union isfuzzy=true\n      (\n      (datatable(exists: int, sumexist: bool)[1, false]\n      | where toscalar(eps) > 1000\n      | join (summarizationexist) on sumexist)\n      | join (\n          _Im_Dns(responsecodename='NXDOMAIN', starttime=todatetime(ago(2d)), endtime=now())\n          | where TimeGenerated > maxSummarizedTime\n          | summarize Count=count() by SrcIpAddr, DnsQuery, bin(TimeGenerated, 1h)\n          | extend EventTime = TimeGenerated, Count = toint(Count), exists=int(1)\n          )\n          on exists\n      | project-away exists, maxv, sum*\n      ),\n      (\n      (datatable(exists: int, sumexist: bool)[1, false]\n      | where toscalar(eps) between (501 .. 1000)\n      | join (summarizationexist) on sumexist)\n      | join (\n          _Im_Dns(responsecodename='NXDOMAIN', starttime=todatetime(ago(3d)), endtime=now())\n          | where TimeGenerated > maxSummarizedTime\n          | summarize Count=count() by SrcIpAddr, DnsQuery, bin(TimeGenerated, 1h)\n          | extend EventTime = TimeGenerated, Count = toint(Count), exists=int(1)\n          )\n          on exists\n      | project-away exists, maxv, sum*\n      ),\n      (\n      (datatable(exists: int, sumexist: bool)[1, false]\n      | where toscalar(eps) <= 500\n      | join (summarizationexist) on sumexist)\n      | join (\n          _Im_Dns(responsecodename='NXDOMAIN', starttime=todatetime(ago(4d)), endtime=now())\n          | where TimeGenerated > maxSummarizedTime\n          | summarize Count=count() by SrcIpAddr, DnsQuery, bin(TimeGenerated, 1h)\n          | extend EventTime = TimeGenerated, Count = toint(Count), exists=int(1)\n          )\n          on exists\n      | project-away exists, maxv, sum*\n      ),\n      (\n      DNS_Summarized_Logs_ip_CL\n      | where EventTime_t > min_t and EventResultDetails_s == 'NXDOMAIN'\n      | project-rename\n          SrcIpAddr=SrcIpAddr_s,\n          DnsQuery=DnsQuery_s,\n          Count=count__d,\n          EventTime=EventTime_t\n      | extend Count = toint(Count)\n      );\nallData\n| make-series QueryCount=dcount(DnsQuery) on EventTime from min_t to max_t step timeframe by SrcIpAddr\n// include calculated Anomalies, Score and Baseline\n| extend (anomalies, score, baseline) = series_decompose_anomalies(QueryCount, toscalar(threshold), -1, 'linefit')\n| mv-expand anomalies, score, baseline, EventTime, QueryCount\n| extend\n  anomalies = toint(anomalies),\n  score = toint(score),\n  baseline = toint(baseline),\n  EventTime = todatetime(EventTime),\n  Total = tolong(QueryCount)\n| where EventTime >= ago(timeframe)\n| where score >= (toscalar(threshold) * 2)\n// Join the allData to include DnsQuery details\n| join kind=inner(allData\n  | where TimeGenerated >= ago(timeframe)\n  | summarize DNSQueries = make_set(DnsQuery, 1000) by SrcIpAddr)\n  on SrcIpAddr\n| project-away SrcIpAddr1\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P14D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "ASimDnsActivityLogs"
                    ],
                    "connectorId": "ASimDnsActivityLogs"
                  },
                  {
                    "dataTypes": [
                      "GCP_DNS_CL"
                    ],
                    "connectorId": "GCPDNSDataConnector"
                  },
                  {
                    "dataTypes": [
                      "AzureDiagnostics"
                    ],
                    "connectorId": "AzureFirewall"
                  },
                  {
                    "dataTypes": [
                      "Cisco_Umbrella_proxy_CL"
                    ],
                    "connectorId": "CiscoUmbrellaDataConnector"
                  },
                  {
                    "dataTypes": [
                      "Corelight_CL"
                    ],
                    "connectorId": "Corelight"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "InfobloxNIOS"
                  },
                  {
                    "dataTypes": [
                      "NXLog_DNS_Server_CL"
                    ],
                    "connectorId": "NXLogDnsLogs"
                  },
                  {
                    "dataTypes": [
                      "DnsEvents"
                    ],
                    "connectorId": "DNS"
                  },
                  {
                    "dataTypes": [
                      "VectraStream_CL"
                    ],
                    "connectorId": "AIVectraStream"
                  },
                  {
                    "dataTypes": [
                      "WindowsEvents"
                    ],
                    "connectorId": "WindowsForwardedEvents"
                  },
                  {
                    "dataTypes": [
                      "CommonSecurityLog"
                    ],
                    "connectorId": "Zscaler"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "ISCBind"
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "techniques": [
                  "T1568",
                  "T1008"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SrcIpAddr"
                      }
                    ],
                    "entityType": "IP"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "DNSQueries": "DNSQueries",
                  "baseline": "baseline",
                  "Total": "Total",
                  "AnomalyScore": "score"
                },
                "alertDetailsOverride": {
                  "alertDescriptionFormat": "Client has been identified with high NXDomain count which could be indicative of a DGA (cycling through possible C2 domains where most C2s are not live). This client is found to be communicating with multiple Domains which do not exist.\n\nBaseline Domain or DNS query count from this client: '{{baseline}}'\n\nCurrent Domain or DNS query count from this client: '{{Total}}'\n\nDNS queries requested by this client inlcude: '{{DNSQueries}}'",
                  "alertDisplayNameFormat": "[Anomaly] Potential DGA (Domain Generation Algorithm) originating from client IP: '{{SrcIpAddr}}' has been detected."
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId6'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Analytics Rule 6",
                "parentId": "[variables('analyticRuleId6')]",
                "contentId": "[variables('_analyticRulecontentId6')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "DNS Essentials Analytics Rule 7 with template",
        "displayName": "DNS Essentials Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName7'),'/',variables('analyticRuleVersion7'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName7'))]"
      ],
      "properties": {
        "description": "PotentialDGADetectedviaRepetitiveFailuresStaticThresholdBased_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion7')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId7')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This rule identifies clients with a high NXDomain count, which could be indicative of a DGA (cycling through possible C2 domains where most C2s are not live). An alert is generated when a new IP address is seen (based on not being seen associated with NXDomain records in prior 10-day baseline period).\\n\\nIt utilizes [ASIM](https://aka.ms/AboutASIM) normalization and is applied to any source that supports the ASIM DNS schema.",
                "displayName": "Potential DGA(Domain Generation Algorithm) detected via Repetitive Failures - Static threshold based (ASIM DNS Solution)",
                "enabled": false,
                "query": "let threshold = materialize (_GetWatchlist('DNS_Solution_Monitoring_Configuration')\n  | where wl_RuleName == 'Potential DGA(Domain Generation Algorithm) detected' and wl_Type == 'Detection'\n  | project toint(wl_Threshold));\nlet lookback = 10d;\nlet referenceendtime = 1d;\nlet nxDomainDnsEvents = (stime: datetime, etime: datetime) {\n  _Im_Dns(responsecodename='NXDOMAIN', starttime=stime, endtime=etime)\n  | where DnsQueryTypeName in (\"A\", \"AAAA\")\n  | where ipv4_is_match(\"127.0.0.1\", SrcIpAddr) == False\n  | where DnsQuery !contains \"/\" and DnsQuery contains \".\"\n};\nnxDomainDnsEvents (stime=ago(referenceendtime), etime=now())\n| summarize\n  StartTimeUtc = min(TimeGenerated),\n  EndTimeUtc = max(TimeGenerated),\n  DNSQueryCount=dcount(DnsQuery)\n  by SrcIpAddr\n| where DNSQueryCount > toscalar(threshold)\n// Filter out previously seen IPs\n| join kind=leftanti (nxDomainDnsEvents (stime=ago(lookback), etime=ago(referenceendtime))\n  | summarize DNSQueryCount=dcount(DnsQuery) by SrcIpAddr\n  | where DNSQueryCount > toscalar(threshold))\n  on SrcIpAddr\n// Pull out sample NXDomain responses for those remaining potentially infected IPs\n| join kind = inner (nxDomainDnsEvents (stime=ago(lookback), etime=now())\n  | summarize by DnsQuery, SrcIpAddr)\n  on SrcIpAddr\n| summarize\n  StartTimeUtc = min(StartTimeUtc),\n  EndTimeUtc = max(EndTimeUtc),\n  DNSQueries=make_list(DnsQuery, 100)\n  by SrcIpAddr, DNSQueryCount\n| extend DNSQueryThreshold=toint(toscalar(threshold))\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P10D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "ASimDnsActivityLogs"
                    ],
                    "connectorId": "ASimDnsActivityLogs"
                  },
                  {
                    "dataTypes": [
                      "GCP_DNS_CL"
                    ],
                    "connectorId": "GCPDNSDataConnector"
                  },
                  {
                    "dataTypes": [
                      "AzureDiagnostics"
                    ],
                    "connectorId": "AzureFirewall"
                  },
                  {
                    "dataTypes": [
                      "Cisco_Umbrella_proxy_CL"
                    ],
                    "connectorId": "CiscoUmbrellaDataConnector"
                  },
                  {
                    "dataTypes": [
                      "Corelight_CL"
                    ],
                    "connectorId": "Corelight"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "InfobloxNIOS"
                  },
                  {
                    "dataTypes": [
                      "NXLog_DNS_Server_CL"
                    ],
                    "connectorId": "NXLogDnsLogs"
                  },
                  {
                    "dataTypes": [
                      "DnsEvents"
                    ],
                    "connectorId": "DNS"
                  },
                  {
                    "dataTypes": [
                      "VectraStream_CL"
                    ],
                    "connectorId": "AIVectraStream"
                  },
                  {
                    "dataTypes": [
                      "WindowsEvents"
                    ],
                    "connectorId": "WindowsForwardedEvents"
                  },
                  {
                    "dataTypes": [
                      "CommonSecurityLog"
                    ],
                    "connectorId": "Zscaler"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "ISCBind"
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "techniques": [
                  "T1568",
                  "T1008"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SrcIpAddr"
                      }
                    ],
                    "entityType": "IP"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "DNSQueryCount": "DNSQueryCount",
                  "DNSQueries": "DNSQueries",
                  "DNSQueryThreshold": "DNSQueryThreshold"
                },
                "alertDetailsOverride": {
                  "alertDescriptionFormat": "Client has been identified with high NXDomain count which could be indicative of a DGA (cycling through possible C2 domains where most C2s are not live). This client is found to be communicating with multiple Domains which do not exist.\n\nDGA DNS query count baseline is: '{{DNSQueryThreshold}}'\n\nCurrent failed DNS query count from this client: '{{DNSQueryCount}}'\n\nDNS queries requested by this client inlcude: '{{DNSQueries}}'",
                  "alertDisplayNameFormat": "[Static threshold] Potential DGA (Domain Generation Algorithm) originating from client IP: '{{SrcIpAddr}}' has been detected."
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId7'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Analytics Rule 7",
                "parentId": "[variables('analyticRuleId7')]",
                "contentId": "[variables('_analyticRulecontentId7')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion7')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName8')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "DNS Essentials Analytics Rule 8 with template",
        "displayName": "DNS Essentials Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName8'),'/',variables('analyticRuleVersion8'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName8'))]"
      ],
      "properties": {
        "description": "RareClientObservedWithHighReverseDNSLookupCountAnomalyBased_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion8')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId8')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This rule makes use of the series decompose anomaly method to identify clients with high reverse DNS counts. This helps in detecting the possible initial phases of an attack, like discovery and reconnaissance. \\n\\nIt utilizes [ASIM](https://aka.ms/AboutASIM) normalization and is applied to any source that supports the ASIM DNS schema.",
                "displayName": "Rare client observed with high reverse DNS lookup count - Anomaly based (ASIM DNS Solution)",
                "enabled": false,
                "query": "let threshold = materialize (_GetWatchlist('DNS_Solution_Monitoring_Configuration')\n  | where wl_RuleName == 'Anomaly - Rare client observed with high reverse DNS lookup'\n      and wl_Type == 'Detection'\n  | project todouble(wl_AnomalyThreshold));\nlet SearchDomain = dynamic([\"in-addr.arpa\"]);\nlet min_t = ago(14d);\nlet max_t = now();\nlet timeframe = 1d;\nlet DNSEvents=(stime: datetime, etime: datetime) {\n  _Im_Dns(starttime=stime, endtime=etime, domain_has_any=SearchDomain)\n};\nDNSEvents(stime=min_t, etime=max_t)\n| make-series QueryCount=dcount(DnsQuery) on TimeGenerated from min_t to max_t step timeframe by SrcIpAddr\n| extend (anomalies, score, baseline) = series_decompose_anomalies(QueryCount, toscalar(threshold), -1, 'linefit')\n| mv-expand anomalies, score, baseline, TimeGenerated, QueryCount\n| extend\n  anomalies = toint(anomalies),\n  score = toint(score),\n  baseline = toint(baseline),\n  EventTime = todatetime(TimeGenerated),\n  Total = tolong(QueryCount)\n| where EventTime >= ago(timeframe)\n| where score >= (toscalar(threshold) * 2)\n| join kind = inner (DNSEvents(stime=ago(timeframe), etime=max_t)\n  | summarize DNSQueries=make_set(DnsQuery, 1000) by SrcIpAddr)\n  on SrcIpAddr\n| project-away SrcIpAddr1\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P14D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "ASimDnsActivityLogs"
                    ],
                    "connectorId": "ASimDnsActivityLogs"
                  },
                  {
                    "dataTypes": [
                      "GCP_DNS_CL"
                    ],
                    "connectorId": "GCPDNSDataConnector"
                  },
                  {
                    "dataTypes": [
                      "AzureDiagnostics"
                    ],
                    "connectorId": "AzureFirewall"
                  },
                  {
                    "dataTypes": [
                      "Cisco_Umbrella_proxy_CL"
                    ],
                    "connectorId": "CiscoUmbrellaDataConnector"
                  },
                  {
                    "dataTypes": [
                      "Corelight_CL"
                    ],
                    "connectorId": "Corelight"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "InfobloxNIOS"
                  },
                  {
                    "dataTypes": [
                      "NXLog_DNS_Server_CL"
                    ],
                    "connectorId": "NXLogDnsLogs"
                  },
                  {
                    "dataTypes": [
                      "DnsEvents"
                    ],
                    "connectorId": "DNS"
                  },
                  {
                    "dataTypes": [
                      "VectraStream_CL"
                    ],
                    "connectorId": "AIVectraStream"
                  },
                  {
                    "dataTypes": [
                      "WindowsEvents"
                    ],
                    "connectorId": "WindowsForwardedEvents"
                  },
                  {
                    "dataTypes": [
                      "CommonSecurityLog"
                    ],
                    "connectorId": "Zscaler"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "ISCBind"
                  }
                ],
                "tactics": [
                  "Reconnaissance"
                ],
                "techniques": [
                  "T1590"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SrcIpAddr"
                      }
                    ],
                    "entityType": "IP"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "DNSQueries": "DNSQueries",
                  "baseline": "baseline",
                  "Total": "Total",
                  "AnomalyScore": "score"
                },
                "alertDetailsOverride": {
                  "alertDescriptionFormat": "Client has been identified as making high reverse DNS counts which could be carrying out reconnaissance or discovery activity.\n\nReverse DNS lookup count baseline for this client: '{{baseline}}'\n\nCurrent reverse DNS lookup count by this client showing as: '{{Total}}'\n\nDNS queries requested by this client inlcude: '{{DNSQueries}}'",
                  "alertDisplayNameFormat": "[Anomaly] Rare client has been observed as making high reverse DNS lookup count  - client IP: '{{SrcIpAddr}}'"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId8'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Analytics Rule 8",
                "parentId": "[variables('analyticRuleId8')]",
                "contentId": "[variables('_analyticRulecontentId8')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion8')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName9')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "DNS Essentials Analytics Rule 9 with template",
        "displayName": "DNS Essentials Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName9'),'/',variables('analyticRuleVersion9'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName9'))]"
      ],
      "properties": {
        "description": "RareClientObservedWithHighReverseDNSLookupCountStaticThresholdBased_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion9')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId9')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This rule identifies clients with high reverse DNS counts, which could be carrying out reconnaissance or discovery activity. This helps in detecting the possible initial phases of an attack, like discovery and reconnaissance. \\n\\nIt utilizes [ASIM](https://aka.ms/AboutASIM) normalization and is applied to any source that supports the ASIM DNS schema.",
                "displayName": "Rare client observed with high reverse DNS lookup count - Static threshold based (ASIM DNS Solution)",
                "enabled": false,
                "query": "let threshold = materialize (_GetWatchlist('DNS_Solution_Monitoring_Configuration')\n  | where wl_RuleName == 'Rare client observed with high reverse DNS lookup'\n      and wl_Type == 'Detection'\n  | project toint(wl_Threshold));\nlet stime = 10d;\nlet etime = 1d;\nlet SearchDomain = dynamic([\"in-addr.arpa\"]);\n_Im_Dns(starttime=ago(etime), domain_has_any=SearchDomain)\n| summarize\n  StartTimeUtc = min(TimeGenerated),\n  EndTimeUtc = max(TimeGenerated),\n  DNSQueryCount=dcount(DnsQuery)\n  by SrcIpAddr\n| where DNSQueryCount > toscalar(threshold)\n| project StartTimeUtc, EndTimeUtc, SrcIpAddr, DNSQueryCount \n| join kind=leftanti (_Im_Dns(starttime=ago(stime), endtime=ago(etime), domain_has_any=SearchDomain)\n  | summarize DNSQueryCount=dcount(DnsQuery) by SrcIpAddr, bin(TimeGenerated, 1d)\n  | where DNSQueryCount > toscalar(threshold)\n  | project SrcIpAddr, DNSQueryCount\n  )\n  on SrcIpAddr\n| join kind=inner (_Im_Dns(starttime=ago(etime), domain_has_any=SearchDomain)\n  | summarize DNSQueries=make_set(DnsQuery, 1000) by SrcIpAddr)\n  on SrcIpAddr\n| extend DNSQuerythreshold = toint(toscalar(threshold))\n| project-away SrcIpAddr1\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P10D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "ASimDnsActivityLogs"
                    ],
                    "connectorId": "ASimDnsActivityLogs"
                  },
                  {
                    "dataTypes": [
                      "GCP_DNS_CL"
                    ],
                    "connectorId": "GCPDNSDataConnector"
                  },
                  {
                    "dataTypes": [
                      "AzureDiagnostics"
                    ],
                    "connectorId": "AzureFirewall"
                  },
                  {
                    "dataTypes": [
                      "Cisco_Umbrella_proxy_CL"
                    ],
                    "connectorId": "CiscoUmbrellaDataConnector"
                  },
                  {
                    "dataTypes": [
                      "Corelight_CL"
                    ],
                    "connectorId": "Corelight"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "InfobloxNIOS"
                  },
                  {
                    "dataTypes": [
                      "NXLog_DNS_Server_CL"
                    ],
                    "connectorId": "NXLogDnsLogs"
                  },
                  {
                    "dataTypes": [
                      "DnsEvents"
                    ],
                    "connectorId": "DNS"
                  },
                  {
                    "dataTypes": [
                      "VectraStream_CL"
                    ],
                    "connectorId": "AIVectraStream"
                  },
                  {
                    "dataTypes": [
                      "WindowsEvents"
                    ],
                    "connectorId": "WindowsForwardedEvents"
                  },
                  {
                    "dataTypes": [
                      "CommonSecurityLog"
                    ],
                    "connectorId": "Zscaler"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "ISCBind"
                  }
                ],
                "tactics": [
                  "Reconnaissance"
                ],
                "techniques": [
                  "T1590"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SrcIpAddr"
                      }
                    ],
                    "entityType": "IP"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "DNSQueryCount": "DNSQueryCount",
                  "DNSQueries": "DNSQueries",
                  "DNSQuerythreshold": "DNSQuerythreshold"
                },
                "alertDetailsOverride": {
                  "alertDescriptionFormat": "Client identified as making high reverse DNS counts which could be carrying out reconnaissance or discovery activity.\n\nReverse DNS lookup threshold is: '{{DNSQuerythreshold}}'\n\nCurrent reverse DNS lookup count from this client is : '{{DNSQueryCount}}'\n\nDNS queries requested by this client inlcude: '{{DNSQueries}}'",
                  "alertDisplayNameFormat": "[Static threshold] Rare client has been observed as making high reverse DNS lookup count  - client IP: '{{SrcIpAddr}}'"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId9'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Analytics Rule 9",
                "parentId": "[variables('analyticRuleId9')]",
                "contentId": "[variables('_analyticRulecontentId9')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion9')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "SummarizeDNSData playbook",
        "displayName": "SummarizeDNSData playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName1'),'/',variables('playbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "SummarizeDNSData Playbook with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "SummarizeDNSData",
              "type": "string"
            },
            "logAnalyticsName": {
              "type": "string",
              "metadata": {
                "description": "Enter value for logAnalyticsName"
              }
            },
            "resourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Enter value for resourceGroupName"
              }
            },
            "subscriptionId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "Enter value for subscriptionId"
              }
            }
          },
          "variables": {
            "AzureloganalyticsdatacollectorConnectionName": "[[concat('Azureloganalyticsdatacollector-', parameters('PlaybookName'))]",
            "AzuremonitorlogsConnectionName": "[[concat('Azuremonitorlogs-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azureloganalyticsdatacollector')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuremonitorlogs')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "logAnalyticsName": {
                      "defaultValue": "[[parameters('logAnalyticsName')]",
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "defaultValue": "[[parameters('resourceGroupName')]",
                      "type": "string"
                    },
                    "subscriptionId": {
                      "defaultValue": "[[parameters('subscriptionId')]",
                      "type": "string"
                    }
                  },
                  "triggers": {
                    "Recurrence": {
                      "recurrence": {
                        "frequency": "Minute",
                        "interval": 10
                      },
                      "evaluatedRecurrence": {
                        "frequency": "Minute",
                        "interval": 10
                      },
                      "type": "Recurrence"
                    }
                  },
                  "actions": {
                    "Condition": {
                      "actions": {
                        "Condition_-_If_Data_-_IP": {
                          "actions": {
                            "For_each_-_SubArray_-_IP": {
                              "foreach": "@variables('multipleArraysIP')",
                              "actions": {
                                "Send_Data_-_IP": {
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": "@{items('For_each_-_SubArray_-_IP')}",
                                    "headers": {
                                      "Log-Type": "DNS_Summarized_Logs_ip_CL"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/api/logs"
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_variable_-_multipleArrays_-_IP": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_variable_-_multipleArrays_-_IP": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "multipleArraysIP",
                                "value": "@chunk(body('Run_query_and_list_results_-_IP')?['value'],div(variables('MaxByteSizeAllowed'),div(variables('TotalCharacterLengthIP'),variables('ArraySizeIP'))))"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_variable_-_TotalCharacterLength_-_IP": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('ArraySizeIP')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Run_query_and_list_results_-_IP": {
                          "type": "ApiConnection",
                          "inputs": {
                            "body": "let nowTime = todatetime(\"@{variables('nowTime')}\");\nlet lastRecievedTime = toscalar (\n    union isfuzzy=true\n        (\n           DNS_Summarized_Logs_ip_CL \n            | summarize max(EventTime_t)\n            | extend max_TimeGenerated = datetime_add('hour',1,bin(max_EventTime_t,1h))\n        ),\n        (\n            print (nowTime)\n            | extend max_TimeGenerated = datetime_add('day',-1,bin(print_0,1h)) \n            | project-away print_0\n        )\n        | summarize max(max_TimeGenerated)\n    );\n_Im_Dns(starttime=lastRecievedTime,endtime=bin(nowTime,1h))\n| where TimeGenerated < bin(nowTime,1h)\n| summarize count() by SrcIpAddr, DnsQuery, EventResultDetails, DnsResponseName, bin(TimeGenerated,1h)\n| extend EventTime = TimeGenerated",
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/queryData",
                            "queries": {
                              "resourcegroups": "@parameters('resourceGroupName')",
                              "resourcename": "@parameters('logAnalyticsName')",
                              "resourcetype": "Log Analytics Workspace",
                              "subscriptions": "@parameters('subscriptionId')",
                              "timerange": "Last 1 day"
                            }
                          }
                        },
                        "Set_variable_-_ArraySize_-_IP": {
                          "runAfter": {
                            "Run_query_and_list_results_-_IP": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "ArraySizeIP",
                            "value": "@length(body('Run_query_and_list_results_-_IP')?['value'])"
                          }
                        },
                        "Set_variable_-_TotalCharacterLength_-_IP": {
                          "runAfter": {
                            "Set_variable_-_ArraySize_-_IP": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "TotalCharacterLengthIP",
                            "value": "@length(string(body('Run_query_and_list_results_-_IP')?['value']))"
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_variable_-_multipleArraysIP": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "lessOrEquals": [
                              "@div(sub(ticks(variables('nowTime')),ticks(startOfHour(variables('nowTime')))),10000000)",
                              600
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Condition_2": {
                      "actions": {
                        "For_each_-_SubArray_-_SourceInfo": {
                          "foreach": "@variables('multipleArraysSourceInfo')",
                          "actions": {
                            "Send_Data": {
                              "type": "ApiConnection",
                              "inputs": {
                                "body": "@{items('For_each_-_SubArray_-_SourceInfo')}",
                                "headers": {
                                  "Log-Type": "DNS_Summarized_Logs_sourceInfo_CL"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/logs"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_variable": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Set_variable": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "multipleArraysSourceInfo",
                            "value": "@chunk(body('Run_query_and_list_results_-_SourceInfo')?['value'],div(variables('MaxByteSizeAllowed'),div(variables('TotalCharacterLengthSourceInfo'),variables('ArraySizeSourceInfo'))))"
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_variable_-_multipleArrays_-_SourceInfo": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@variables('ArraySizeSourceInfo')",
                              0
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Initialize_variable_-_ArraySizeIP": {
                      "runAfter": {
                        "MaxRequestSizeAllowed": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "ArraySizeIP",
                            "type": "integer"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_ArraySize_-_SourceInfo": {
                      "runAfter": {
                        "Run_query_and_list_results_-_SourceInfo": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "ArraySizeSourceInfo",
                            "type": "integer",
                            "value": "@length(body('Run_query_and_list_results_-_SourceInfo')?['value'])"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_TotalCharacterLengthIP": {
                      "runAfter": {
                        "Initialize_variable_-_ArraySizeIP": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "TotalCharacterLengthIP",
                            "type": "integer"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_TotalCharacterLength_-_SourceInfo": {
                      "runAfter": {
                        "Initialize_variable_-_ArraySize_-_SourceInfo": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "TotalCharacterLengthSourceInfo",
                            "type": "integer",
                            "value": "@length(string(body('Run_query_and_list_results_-_SourceInfo')?['value']))"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_multipleArraysIP": {
                      "runAfter": {
                        "Initialize_variable_-_TotalCharacterLengthIP": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "multipleArraysIP",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_multipleArrays_-_SourceInfo": {
                      "runAfter": {
                        "Initialize_variable_-_TotalCharacterLength_-_SourceInfo": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "multipleArraysSourceInfo",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "MaxRequestSizeAllowed": {
                      "runAfter": {
                        "nowTime": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "MaxByteSizeAllowed",
                            "type": "integer",
                            "value": 26214400
                          }
                        ]
                      }
                    },
                    "Run_query_and_list_results_-_SourceInfo": {
                      "runAfter": {
                        "MaxRequestSizeAllowed": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "let nowTime = todatetime(\"@{variables('nowTime')}\");\nlet lastRecievedTime = toscalar (\n    union isfuzzy=true\n        (\n           DNS_Summarized_Logs_sourceInfo_CL \n            | summarize max(EventTime_t)\n            | extend max_TimeGenerated = datetime_add('minute',10,bin(max_EventTime_t,10m))\n        ),\n        (\n            print (nowTime)\n            | extend max_TimeGenerated = datetime_add('day',-1,bin(print_0,10m)) \n            | project-away print_0\n        )\n        | summarize max(max_TimeGenerated)\n    );\n_Im_Dns(starttime=lastRecievedTime,endtime=bin(nowTime,10m))\n| where TimeGenerated < bin(nowTime,10m)\n| extend EventProduct = strcat(EventVendor,\"-\",EventProduct)\n| summarize count() by EventProduct, DvcHostname,EventType,EventSubType, DnsQueryTypeName, bin(TimeGenerated,10m)\n| extend EventTime = TimeGenerated",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/queryData",
                        "queries": {
                          "resourcegroups": "@parameters('resourceGroupName')",
                          "resourcename": "@parameters('logAnalyticsName')",
                          "resourcetype": "Log Analytics Workspace",
                          "subscriptions": "@parameters('subscriptionId')",
                          "timerange": "Last 1 day"
                        }
                      }
                    },
                    "nowTime": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "nowTime",
                            "type": "string",
                            "value": "@{utcNow()}"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azureloganalyticsdatacollector": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureloganalyticsdatacollectorConnectionName'))]",
                        "connectionName": "[[variables('AzureloganalyticsdatacollectorConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azureloganalyticsdatacollector')]"
                      },
                      "azuremonitorlogs": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                        "connectionName": "[[variables('AzuremonitorlogsConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuremonitorlogs')]"
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "SummarizeDNSData",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2019-05-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureloganalyticsdatacollectorConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureloganalyticsdatacollectorConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureloganalyticsdatacollectorConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzuremonitorlogsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzuremonitorlogsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-3')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Summarize Data for DNS Essentials Solution",
            "description": "This playbook summarizes data for DNS Essentials Solution and ingests into custom tables.",
            "postDeployment": [
              "1. Authorize 'Azure Monitor Logs' and 'Azure Log Analytics Data Collector' API connections."
            ],
            "tags": [
              "Networking"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "SummarizeDNSData",
              "notes": [
                "Initial version"
              ]
            },
            "lastUpdateTime": "2023-03-16T12:10:09.721Z"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "DNS Essentials Hunting Query 1 with template",
        "displayName": "DNS Essentials Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName1'),'/',variables('huntingQueryVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "AnomalousIncreaseInDNSActivityByClients_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "DNS_Essentials_Hunting_Query_1",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "[Anomaly] Anomalous Increase in DNS activity by clients (ASIM DNS Solution)",
                "category": "Hunting Queries",
                "query": "let threshold = materialize (_GetWatchlist('DNS_Solution_Monitoring_Configuration')\n  | where wl_RuleName == 'Anomaly - Anomalous Increase in DNS activity by Clients'\n     and wl_Type == 'Hunting'\n  | project todouble(wl_AnomalyThreshold));\nlet min_t = ago(14d);\nlet max_t = now();\nlet dt = 1d;\nlet Errors = dynamic(['NXDOMAIN', 'SERVFAIL', 'REFUSED']);\n// calculate avg. eps(events per second)\nlet eps = materialize (_Im_Dns\n  | project TimeGenerated\n  | where TimeGenerated > ago(5m)\n  | count\n  | extend Count = Count / 300);\nlet maxSummarizedTime = toscalar (\n  union isfuzzy=true \n      (\n      DNS_Summarized_Logs_ip_CL \n      | where EventTime_t >= min_t\n      | summarize max_TimeGenerated=max(EventTime_t)\n      | extend max_TimeGenerated = datetime_add('hour', 1, max_TimeGenerated)\n      ),\n      (\n      print(min_t)\n      | project max_TimeGenerated = print_0\n      )\n  | summarize maxTimeGenerated = max(max_TimeGenerated) \n  );\nlet summarizationexist = materialize(\n  union isfuzzy=true \n      (\n      DNS_Summarized_Logs_ip_CL\n      | where EventTime_t > ago(1d) \n      | project v = int(2)\n      ),\n      (\n      print int(1) \n      | project v = print_0\n      )\n  | summarize maxv = max(v)\n  | extend sumexist = (maxv > 1)\n  );\nlet allData = union isfuzzy=true\n      (\n      (datatable(exists: int, sumexist: bool)[1, false]\n      | where toscalar(eps) > 1000\n      | join (summarizationexist) on sumexist)\n      | join (\n          _Im_Dns(starttime=todatetime(ago(2d)), endtime=now())\n          | where TimeGenerated > maxSummarizedTime and isnotempty(SrcIpAddr)\n          | summarize Count=count() by SrcIpAddr, bin(TimeGenerated, 1h)\n          | extend EventTime = TimeGenerated, Count = toint(Count), exists=int(1)\n          )\n          on exists\n      | project-away exists, maxv, sum*\n      ),\n      (\n      (datatable(exists: int, sumexist: bool)[1, false]\n      | where toscalar(eps) between (501 .. 1000)\n      | join (summarizationexist) on sumexist)\n      | join (\n          _Im_Dns(starttime=todatetime(ago(3d)), endtime=now())\n          | where TimeGenerated > maxSummarizedTime and isnotempty(SrcIpAddr)\n          | summarize Count=count() by SrcIpAddr, bin(TimeGenerated, 1h)\n          | extend EventTime = TimeGenerated, Count = toint(Count), exists=int(1)\n          )\n          on exists\n      | project-away exists, maxv, sum*\n      ),\n      (\n      (datatable(exists: int, sumexist: bool)[1, false]\n      | where toscalar(eps) <= 500\n      | join (summarizationexist) on sumexist)\n      | join (\n          _Im_Dns(starttime=todatetime(ago(4d)), endtime=now())\n          | where TimeGenerated > maxSummarizedTime and isnotempty(SrcIpAddr)\n          | summarize Count=count() by SrcIpAddr, bin(TimeGenerated, 1h)\n          | extend EventTime = TimeGenerated, Count = toint(Count), exists=int(1)\n          )\n          on exists\n      | project-away exists, maxv, sum*\n      ),\n      (\n      DNS_Summarized_Logs_ip_CL\n      | where EventTime_t > min_t and isnotempty(SrcIpAddr_s)\n      | summarize Count=toint(sum(count__d)) by SrcIpAddr=SrcIpAddr_s, bin(EventTime=EventTime_t, 1h)\n      );\nallData\n| make-series TotalEventCountPerDay= sum(Count) on EventTime from min_t to max_t step dt by SrcIpAddr\n| extend (anomalies, score, baseline) = series_decompose_anomalies(TotalEventCountPerDay, toscalar(threshold), -1, 'linefit')\n| mv-expand anomalies, score, baseline, EventTime, TotalEventCountPerDay\n| extend\n  anomalies = toint(anomalies),\n  score = toint(score),\n  baseline = toint(baseline),\n  EventTime = todatetime(EventTime),\n  TotalEvents = tolong(TotalEventCountPerDay)\n| where EventTime >= ago(dt)\n| where score >= (toscalar(threshold) * 2)\n| order by score\n| extend IP_0_Address = SrcIpAddr\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Checks for an anomalous increase in DNS activity per client in the last 24 hours as compared to the last 14 days. Please note: To enhance performance, this query uses summarized data if available."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  },
                  {
                    "name": "techniques",
                    "value": "T1568,T1008,T1048"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId1'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Hunting Query 1",
                "parentId": "[variables('huntingQueryId1')]",
                "contentId": "[variables('_huntingQuerycontentId1')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "DNS Essentials Hunting Query 2 with template",
        "displayName": "DNS Essentials Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName2'),'/',variables('huntingQueryVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "ConnectionToUnpopularWebsiteDetected_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "DNS_Essentials_Hunting_Query_2",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Connection to Unpopular Website Detected (ASIM DNS Solution)",
                "category": "Hunting Queries",
                "query": "let min_t = ago(14d);\nlet max_t = now();\nlet dt = 1d;\n// calculate avg. eps(events per second)\nlet eps = materialize (_Im_Dns\n  | project TimeGenerated\n  | where TimeGenerated > ago(5m)\n  | count\n  | extend Count = Count / 300);\nlet maxSummarizedTime = toscalar (\n  union isfuzzy=true \n      (\n      DNS_Summarized_Logs_ip_CL \n      | where EventTime_t >= min_t\n      | summarize max_TimeGenerated=max(EventTime_t)\n      | extend max_TimeGenerated = datetime_add('hour', 1, max_TimeGenerated)\n      ),\n      (\n      print(min_t)\n      | project max_TimeGenerated = print_0\n      )\n  | summarize maxTimeGenerated = max(max_TimeGenerated) \n  );\nlet summarizationexist = materialize(\n  union isfuzzy=true \n      (\n      DNS_Summarized_Logs_ip_CL\n      | where EventTime_t > ago(1d) \n      | project v = int(2)\n      ),\n      (\n      print int(1) \n      | project v = print_0\n      )\n  | summarize maxv = max(v)\n  | extend sumexist = (maxv > 1)\n  );\n  let allData = ( union isfuzzy=true\n      (\n      (datatable(exists: int, sumexist: bool)[1, false]\n      | where toscalar(eps) > 1000\n      | join (summarizationexist) on sumexist)\n      | join (\n          _Im_Dns(starttime=todatetime(ago(2d)), endtime=ago(dt))\n          | where TimeGenerated > maxSummarizedTime\n          | summarize Count=count() by DnsQuery\n          | top 1000000 by Count\n          | summarize TopOneMillionDNSQuery=make_list(DnsQuery,1000000)\n          | extend exists=int(1)\n          )\n          on exists\n      | project-away exists, maxv, sum*\n      ),\n      (\n      (datatable(exists: int, sumexist: bool)[1, false]\n      | where toscalar(eps) between (501 .. 1000)\n      | join (summarizationexist) on sumexist)\n      | join (\n          _Im_Dns(starttime=todatetime(ago(3d)), endtime=ago(dt))\n          | where TimeGenerated > maxSummarizedTime\n          | summarize Count=count() by DnsQuery\n          | top 1000000 by Count\n          | summarize TopOneMillionDNSQuery=make_list(DnsQuery,1000000)\n          | extend exists=int(1)\n          )\n          on exists\n      | project-away exists, maxv, sum*\n      ),\n      (\n      (datatable(exists: int, sumexist: bool)[1, false]\n      | where toscalar(eps) <= 500\n      | join (summarizationexist) on sumexist)\n      | join (\n          _Im_Dns(starttime=todatetime(ago(4d)), endtime=ago(dt))\n          | where TimeGenerated > maxSummarizedTime\n          | summarize Count=count() by DnsQuery\n          | top 1000000 by Count\n          | summarize TopOneMillionDNSQuery=make_list(DnsQuery,1000000)\n          | extend exists=int(1)\n          )\n          on exists\n      | project-away exists, maxv, sum*\n      ),\n      (\n      DNS_Summarized_Logs_ip_CL\n      | where EventTime_t between (min_t .. ago(dt)) and isnotempty(DnsQuery_s)\n      | project-rename\n          DnsQuery=DnsQuery_s,\n          Count=count__d\n      | extend Count = toint(Count)\n      | summarize TotalCount=toint(sum(Count)) by DnsQuery\n      | top 1000000 by TotalCount\n      | summarize TopOneMillionDNSQuery=make_list(DnsQuery,1000000)\n      )\n      );\n_Im_Dns(starttime=ago(dt),endtime=now())\n| summarize Count=count() by DnsQuery\n| where isnotempty(DnsQuery) and DnsQuery !in (allData)\n| extend DNS_0_DomainName = DnsQuery\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query lists DNS queries not found in the top 1 million queries in the past 14 days. Please note: To enhance performance, this query uses summarized data if available."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  },
                  {
                    "name": "techniques",
                    "value": "T1095"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId2'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Hunting Query 2",
                "parentId": "[variables('huntingQueryId2')]",
                "contentId": "[variables('_huntingQuerycontentId2')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "DNS Essentials Hunting Query 3 with template",
        "displayName": "DNS Essentials Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName3'),'/',variables('huntingQueryVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "CVE-2020-1350 (SIGRED)ExploitationPattern_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "DNS_Essentials_Hunting_Query_3",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "CVE-2020-1350 (SIGRED) exploitation pattern (ASIM DNS Solution)",
                "category": "Hunting Queries",
                "query": "let threshold = 15;\n_Im_Dns(starttime=ago(1d),endtime=now())\n| where DnsQueryTypeName in~ ('SIG', 'RRSIG')\n| where NetworkProtocol =~ 'TCP'\n| summarize Count=count() by SrcIpAddr, bin(TimeGenerated, 1m)\n| where Count > threshold\n| extend IP_0_Address = SrcIpAddr\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query detects the exploitation pattern of the CVE-2020-1350 (SIGRED) vulnerability. This query utilizes [ASIM](https://aka.ms/AboutASIM) normalization and is applied to any source that supports the ASIM DNS schema."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  },
                  {
                    "name": "techniques",
                    "value": "T1068,T1055"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId3'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Hunting Query 3",
                "parentId": "[variables('huntingQueryId3')]",
                "contentId": "[variables('_huntingQuerycontentId3')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "DNS Essentials Hunting Query 4 with template",
        "displayName": "DNS Essentials Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName4'),'/',variables('huntingQueryVersion4'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName4'))]"
      ],
      "properties": {
        "description": "DNSQueryWithFailuresInLast24Hours_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion4')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "DNS_Essentials_Hunting_Query_4",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Top 25 DNS queries with most failures in last 24 hours (ASIM DNS Solution)",
                "category": "Hunting Queries",
                "query": "let timeframe = 1d;\n_Im_Dns(starttime=ago(timeframe), endtime=now())\n| where EventSubType == 'response' and ResponseCodeName != 'NOERROR'\n| summarize Count=count() by DnsQuery, ResponseCodeName\n| order by Count\n| take 25\n| extend DNS_0_DomainName = DnsQuery\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query searches for DNS queries that resulted in errors. This query utilizes [ASIM](https://aka.ms/AboutASIM) normalization and is applied to any source that supports the ASIM DNS schema."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  },
                  {
                    "name": "techniques",
                    "value": "T1095"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId4'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Hunting Query 4",
                "parentId": "[variables('huntingQueryId4')]",
                "contentId": "[variables('_huntingQuerycontentId4')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "DNS Essentials Hunting Query 5 with template",
        "displayName": "DNS Essentials Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName5'),'/',variables('huntingQueryVersion5'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName5'))]"
      ],
      "properties": {
        "description": "DNSRequestToKnownDomainIOCs_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion5')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "DNS_Essentials_Hunting_Query_5",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Detect DNS request to known Domain IOCs (ASIM DNS Solution)",
                "category": "Hunting Queries",
                "query": "let lookback=1d;\nlet DNS_IOCs = materialize(_GetWatchlist('DNS_Solution_Domain_IOCs')\n  | where wl_Type == 'Hunting' and wl_Enabled == 'TRUE'\n  | project\n      wl_DNSDomain,\n      wl_Name,\n      wl_Description,\n      wl_Type,\n      wl_ThresholdType,\n      wl_Threshold,\n      wl_Severity,\n      wl_Tactic,\n      wl_Enabled);\nlet Dynamic_DomainList=DNS_IOCs | summarize  make_set(wl_DNSDomain);\n_Im_Dns(starttime=ago(lookback),endtime=now(),domain_has_any=toscalar(Dynamic_DomainList))\n| join kind=inner['DNS_IOCs'] where DnsQuery has wl_DNSDomain\n| project\n  SrcIpAddr,\n  DnsQuery,\n  EventResultDetails,\n  Name=wl_Name,\n  Description=wl_Description,\n  TimeGenerated,\n  Tactic=wl_Tactic,\n  Severity=wl_Severity\n  | summarize Count=count(), EventStartTime=min(TimeGenerated), EventEndTime=max(TimeGenerated) by SrcIpAddr,DnsQuery, EventResultDetails, Name, Description, Tactic, Severity\n  | extend IP_0_Address = SrcIpAddr\n  | extend DNS_0_DomainName = DnsQuery\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This rule identifies known domain IOCs in the DNS query logs. To tune the query to your environment, configure it using the 'DNS_Solution_Domain_IOCs' Watchlist."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl,Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1095,T1568,T1008,T1048"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId5'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Hunting Query 5",
                "parentId": "[variables('huntingQueryId5')]",
                "contentId": "[variables('_huntingQuerycontentId5')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "DNS Essentials Hunting Query 6 with template",
        "displayName": "DNS Essentials Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName6'),'/',variables('huntingQueryVersion6'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName6'))]"
      ],
      "properties": {
        "description": "DomainsWithLargeNumberOfSubDomains_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion6')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "DNS_Essentials_Hunting_Query_6",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Top 25 Domains with large number of Subdomains (ASIM DNS Solution)",
                "category": "Hunting Queries",
                "query": "let lookback=1d;\n_Im_Dns(starttime=ago(lookback),endtime=now())\n| distinct DnsQuery\n| extend DomainParts = split(DnsQuery,'.')\n| extend DomainName = strcat(DomainParts[toint(array_length(DomainParts)-2)],'.',DomainParts[toint(array_length(DomainParts)-1)])\n| summarize SubDomainCount=dcount(DnsQuery),make_list(DnsQuery) by DomainName\n| order by SubDomainCount\n| take 25\n| extend DNS_0_DomainName = DomainName\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "A large number of subdomains for a domain may be an indicator of a suspicious domain. This query returns the top 25 domains by number of subdomains."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  },
                  {
                    "name": "techniques",
                    "value": "T1568,T1008,T1048"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId6'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Hunting Query 6",
                "parentId": "[variables('huntingQueryId6')]",
                "contentId": "[variables('_huntingQuerycontentId6')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "DNS Essentials Hunting Query 7 with template",
        "displayName": "DNS Essentials Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName7'),'/',variables('huntingQueryVersion7'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName7'))]"
      ],
      "properties": {
        "description": "IncreaseInDNSRequestsByClientThanTheDailyAverageCount_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion7')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "DNS_Essentials_Hunting_Query_7",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Increase in DNS Requests by client than the daily average count (ASIM DNS Solution)",
                "category": "Hunting Queries",
                "query": "let starttime = now();\nlet endtime = now();\nlet lookback = ago(7d);\n//example of excluding Saturday and Sunday in Average as those are potentially low volume and decrease the average, feel free to change\nlet excludedDays = dynamic([\"Saturday\", \"Sunday\"]);\n// average is across 5 days as we are dropping weekends, change as needed\nlet numDays = 5;\n// limit to over 1000 lookups somewhat random but helps focus in on higher lookups, change as needed\nlet avglookupThreshold = 3;\nlet lookupThreshold = 1000;\n//Setting to startofday so we get 7 days prior to today\n_Im_Dns(starttime=startofday(lookback),endtime=startofday(starttime))\n//getting the associated number of the day of the week so we can map to a given day for later parsing if needed\n| extend DayNumberofWeek = tostring(dayofweek(TimeGenerated))\n//Setting the Day of the week value so that certain days could be excluded if needed\n| extend DayofWeek = iff(DayNumberofWeek == \"00:00:00\", \"Sunday\",\n(iff(DayNumberofWeek == \"1.00:00:00\", \"Monday\",\n(iff(DayNumberofWeek == \"2.00:00:00\", \"Tuesday\",\n(iff(DayNumberofWeek == \"3.00:00:00\", \"Wednesday\",\n(iff(DayNumberofWeek == \"4.00:00:00\", \"Thursday\",\n(iff(DayNumberofWeek == \"5.00:00:00\", \"Friday\",\n(iff(DayNumberofWeek == \"6.00:00:00\", \"Saturday\", DayNumberofWeek)))))))))))))\n| where DayofWeek !in~ (excludedDays)\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), count() by SrcIpAddr, DnsQuery\n| project StartTime, EndTime, SrcIpAddr, FullNameLookup = DnsQuery, DailyAvgLookupCountOverLastWeek = count_/numDays\n| join ( _Im_Dns\n| where TimeGenerated between(startofday(starttime)..endofday(endtime))\n| summarize count() by SrcIpAddr, FullNameLookup = DnsQuery\n| project SrcIpAddr, LookupCountToday = count_, FullNameLookup\n)\non SrcIpAddr, FullNameLookup\n| where LookupCountToday > (DailyAvgLookupCountOverLastWeek * avglookupThreshold) and LookupCountToday >= lookupThreshold\n| project StartTime, EndTime, SrcIpAddr, LookupCountToday, DailyAvgLookupCountOverLastWeek, FullNameLookup\n| order by LookupCountToday desc nulls last\n| extend timestamp = StartTime\n| extend IP_0_Address = SrcIpAddr\n| extend DNS_0_DomainName = FullNameLookup\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Checking for a threefold increase or more in Full Name lookups per client IP for today vs. the daily average for the previous week."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl,Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1568,T1008,T1048"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId7'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Hunting Query 7",
                "parentId": "[variables('huntingQueryId7')]",
                "contentId": "[variables('_huntingQuerycontentId7')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion7')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName8')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "DNS Essentials Hunting Query 8 with template",
        "displayName": "DNS Essentials Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName8'),'/',variables('huntingQueryVersion8'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName8'))]"
      ],
      "properties": {
        "description": "PossibleDNSTunnelingOrDataExfilterationActivity_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion8')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "DNS_Essentials_Hunting_Query_8",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Possible DNS Tunneling or Data Exfilteration Activity (ASIM DNS Solution)",
                "category": "Hunting Queries",
                "query": "// Setting URI length threshold count, shorter URI's may cause noise, change as needed\nlet lookback=1day;\nlet uriThreshold = 150;\nlet ExcludeDomains=dynamic([\"cnr.io\", \"kr0.io\", \"arcticwolf.net\", \"webcfs00.com\", \"barracudabrts.com\", \"trendmicro.com\", \"sophosxl.net\", \n\"spotify.com\", \"e5.sk\", \"mcafee.com\", \"opendns.com\", \"spameatingmonkey.net\", \"_ldap\", \"_kerberos\", \"modsecurity.org\", \n\"fdmarc.net\", \"ipass.com\", \"wpad\"]);\n_Im_Dns(starttime=ago(lookback),endtime=now())\n| summarize count() by SrcIpAddr, DnsQuery\n| where not(DnsQuery has_any (ExcludeDomains))\n| extend Urilength = strlen(DnsQuery)\n| where Urilength >= uriThreshold\n| order by Urilength\n| extend IP_0_Address = SrcIpAddr\n| extend DNS_0_DomainName = DnsQuery\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Typical domain name lengths are short, whereas domain name queries used for data exfiltration or tunneling can often be very large in size. The hunting query looks for DNS queries that are more than 150 characters long."
                  },
                  {
                    "name": "tactics",
                    "value": "Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1568,T1008,T1048"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId8'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Hunting Query 8",
                "parentId": "[variables('huntingQueryId8')]",
                "contentId": "[variables('_huntingQuerycontentId8')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion8')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName9')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "DNS Essentials Hunting Query 9 with template",
        "displayName": "DNS Essentials Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName9'),'/',variables('huntingQueryVersion9'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName9'))]"
      ],
      "properties": {
        "description": "PotentialBeaconingActivity_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion9')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "DNS_Essentials_Hunting_Query_9",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Potential beaconing activity (ASIM DNS Solution)",
                "category": "Hunting Queries",
                "query": "let querystarttime = 2d;\nlet queryendtime = 1d;\nlet TimeDeltaThreshold = 10;\nlet TotalEventsThreshold = 15;\nlet PercentBeaconThreshold = 80;\n_Im_Dns(starttime=ago(querystarttime), endtime=ago(queryendtime))\n| where isnotempty(SrcIpAddr)\n| project TimeGenerated, SrcIpAddr, DnsQuery\n| sort by SrcIpAddr asc,TimeGenerated asc\n| serialize\n| extend nextTimeGenerated = next(TimeGenerated, 1), nextSrcIpAddr = next(SrcIpAddr, 1)\n| extend TimeDeltainSeconds = datetime_diff('second',nextTimeGenerated,TimeGenerated)\n| where SrcIpAddr == nextSrcIpAddr\n//Whitelisting criteria/ threshold criteria\n| where TimeDeltainSeconds > TimeDeltaThreshold\n| project TimeGenerated, TimeDeltainSeconds, SrcIpAddr, DnsQuery\n| summarize count(), make_list(TimeDeltainSeconds) by TimeDeltainSeconds, bin(TimeGenerated, 1h), SrcIpAddr, DnsQuery\n| summarize (MostFrequentTimeDeltaCount, MostFrequentTimeDeltainSeconds) = arg_max(count_, TimeDeltainSeconds), TotalEvents=sum(count_)\nby bin(TimeGenerated, 1h), SrcIpAddr, DnsQuery\n| where TotalEvents > TotalEventsThreshold\n| extend BeaconPercent = MostFrequentTimeDeltaCount/toreal(TotalEvents) * 100\n| where BeaconPercent > PercentBeaconThreshold\n| order by BeaconPercent\n| take 50\n| extend IP_0_Address = SrcIpAddr\n| extend DNS_0_DomainName = DnsQuery\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query identifies beaconing patterns from DNS logs based on recurrent frequency patterns. Such a potential outbound beaconing pattern to untrusted public networks should be investigated for any malware callbacks or data exfiltration attempts."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  },
                  {
                    "name": "techniques",
                    "value": "T1095,T1573,T1008,T1571,T1219"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId9'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Hunting Query 9",
                "parentId": "[variables('huntingQueryId9')]",
                "contentId": "[variables('_huntingQuerycontentId9')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion9')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName10')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "DNS Essentials Hunting Query 10 with template",
        "displayName": "DNS Essentials Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName10'),'/',variables('huntingQueryVersion10'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName10'))]"
      ],
      "properties": {
        "description": "Sources(Clients)WithHighNumberOfErrors_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion10')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "DNS_Essentials_Hunting_Query_10",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Top 25 Sources(Clients) with high number of errors in last 24hours (ASIM DNS Solution)",
                "category": "Hunting Queries",
                "query": "let timeframe = 1d;\n_Im_Dns(starttime=ago(timeframe), endtime=now())\n| where EventSubType == 'response' and DnsResponseCodeName != 'NOERROR'\n| where isnotempty(SrcIpAddr)\n| summarize Count=count() by SrcIpAddr, DnsResponseCodeName\n| order by Count\n| take 25\n| extend IP_0_Address = SrcIpAddr\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query searches for the top 25 clients with the most errors. This query utilizes [ASIM](https://aka.ms/AboutASIM) normalization and is applied to any source that supports the ASIM DNS schema."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  },
                  {
                    "name": "techniques",
                    "value": "T1095"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId10'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Hunting Query 10",
                "parentId": "[variables('huntingQueryId10')]",
                "contentId": "[variables('_huntingQuerycontentId10')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion10')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('huntingQueryTemplateSpecName11')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "properties": {
        "description": "DNS Essentials Hunting Query 11 with template",
        "displayName": "DNS Essentials Hunting Query template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('huntingQueryTemplateSpecName11'),'/',variables('huntingQueryVersion11'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "HuntingQuery"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('huntingQueryTemplateSpecName11'))]"
      ],
      "properties": {
        "description": "UnexpectedTopLevelDomains_HuntingQueries Hunting Query with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryVersion11')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2020-08-01",
              "name": "DNS_Essentials_Hunting_Query_11",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Unexpected top level domains (ASIM DNS Solution)",
                "category": "Hunting Queries",
                "query": "// Check in last 24hours\nlet looback=1d;\n_Im_Dns(starttime=ago(looback),endtime=now())\n| summarize Count=count() by SrcIpAddr, DnsQuery\n| extend TopLevelDomain = tostring(split(DnsQuery, \".\")[-1])\n| where strlen(TopLevelDomain) > 4\n| order by Count\n| take 25\n| extend IP_0_Address = SrcIpAddr\n| extend DNS_0_DomainName = DnsQuery\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query looks for top-level domains that are longer than four characters. This query utilizes [ASIM](https://aka.ms/AboutASIM) normalization and is applied to any source that supports the ASIM DNS schema."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  },
                  {
                    "name": "techniques",
                    "value": "T1095"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(variables('huntingQueryId11'),'/'))))]",
              "properties": {
                "description": "DNS Essentials Hunting Query 11",
                "parentId": "[variables('huntingQueryId11')]",
                "contentId": "[variables('_huntingQuerycontentId11')]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryVersion11')]",
                "source": {
                  "kind": "Solution",
                  "name": "DNS Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist1-id'))]",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "description": "Configure the DNS Essentials solution monitoring conditions here. Change rule based or anomaly threshold value to suit your environment",
        "displayName": "DNS_Solution_Monitoring_Configuration",
        "source": "DNS_Solution_Monitoring_Configuration.csv",
        "provider": "Microsoft",
        "isDeleted": false,
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "wl_RuleName",
        "rawContent": "wl_RuleName,wl_Type,wl_Threshold,wl_AnomalyThreshold\r\nPotential DGA(Domain Generation Algorithm) detected,Detection,100,NA\r\nExcessive NXDOMAIN DNS Queries,Detection,200,NA\r\nMultiple errors reported for same DNSQuery,Detection,2,NA\r\nRare client observed with high reverse DNS lookup,Detection,10,NA\r\nAnomaly - Potential DGA(Domain Generation Algorithm) detected,Detection,NA,2.5\r\nAnomaly - Excessive NXDOMAIN DNS Queries,Detection,NA,2.5\r\nAnomaly - Multiple errors reported for same DNSQuery,Detection,NA,2.5\r\nAnomaly - Rare client observed with high reverse DNS lookup,Detection,NA,2.5\r\nAnomaly - Anomalous Increase in DNS activity by Clients,Hunting,NA,2.5\r\n",
        "watchlistAlias": "DNS_Solution_Monitoring_Configuration",
        "contentType": "text/csv"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist2-id'))]",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "description": "Contain a list of data feeds for Domain IOCs. Add new or enable/disable existing Domain IOCs to meet your environment needs.",
        "displayName": "DNS_Solution_Domain_IOCs",
        "source": "DNS_Solution_Domain_IOCs.csv",
        "provider": "Microsoft",
        "isDeleted": false,
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "wl_DNSDomain",
        "rawContent": "wl_DNSDomain,wl_Type,wl_ThresholdType,wl_Threshold,wl_Severity,wl_Tactic,wl_Name,wl_Description,wl_Enabled\r\nnoip.com,Detection,Static,0,Medium,CommandAndControl,Request to dynamic DNS service,Detects requests to ip lookup resources.,TRUE\r\ndynu.com,Detection,Static,0,Medium,CommandAndControl,Request to dynamic DNS service,Detects requests to ip lookup resources.,TRUE\r\ndyn.com,Detection,Static,0,Medium,CommandAndControl,Request to dynamic DNS service,Detects requests to ip lookup resources.,TRUE\r\ndynv6.com,Detection,Static,0,Medium,CommandAndControl,Request to dynamic DNS service,Detects requests to ip lookup resources.,TRUE\r\nmonerohash.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\ndo-dear.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nxmrminerpro.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nsecumine.net,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nxmrpool.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nminexmr.org,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nhashanywhere.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nxmrget.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nmininglottery.eu,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nminergate.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nmoriaxmr.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nmultipooler.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nmoneropools.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nxmrpool.eu,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\ncoolmining.club,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nsupportxmr.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nminexmr.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nhashvault.pro,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nxmrpool.net,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\ncrypto-pool.fr,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nxmr.pt,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nminer.rocks,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nwalpool.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nherominers.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\ngntl.co.uk,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nsemipool.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\ncoinfoundry.org,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\ncryptoknight.cc,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nfairhash.org,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nbaikalmine.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\ntubepool.xyz,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nfairpool.xyz,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nasiapool.io,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\ncoinpoolit.webhop.me,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nnanopool.org,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nmoneropool.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nminer.center,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nprohash.net,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\npoolto.be,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\ncryptoescrow.eu,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nmonerominers.net,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\ncryptonotepool.org,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nextrmepool.org,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nwebcoin.me,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nkippo.eu,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nhashinvest.ws,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nmonero.farm,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nsupportxmr.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nxmrpool.eu,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nlinux-repository-updates.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\n1gh.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\ndwarfpool.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nhash-to-coins.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nhashvault.pro,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\npool-proxy.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nhashfor.cash,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nfairpool.cloud,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nlitecoinpool.org,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nmineshaft.ml,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nabcxyz.stream,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nmoneropool.ru,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\ncryptonotepool.org.uk,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nextremepool.org,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nextremehash.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nhashinvest.net,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nunipool.pro,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\ncrypto-pools.org,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nmonero.net,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nbackup-pool.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nmooo.com,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nfreeyy.me,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\ncryptonight.net,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\nshscrypto.net,Detection,Static,0,Low,Impact,DNS events related to mining pools,Identifies IP addresses that may be performing DNS lookups associated with common currency mining pools.,TRUE\r\ntor2web.org,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\ntor2web.com,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\ntorlink.co,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.to,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.ink,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.cab,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.nu,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.link,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.it,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.city,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.direct,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.top,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.casa,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.plus,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.rip,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.dog,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\ntor2web.fi,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\ntor2web.blutmagie.de,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.sh,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.lu,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.pet,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nt2w.pw,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\ntor2web.ae.org,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\ntor2web.io,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\ntor2web.xyz,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nonion.lt,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\ns1.tor-gateways.de,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\ns2.tor-gateways.de,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\ns3.tor-gateways.de,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\ns4.tor-gateways.de,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\ns5.tor-gateways.de,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nhiddenservice.net,Detection,Static,0,Low,Exfiltration,DNS events related to ToR proxies,Identifies IP addresses performing DNS lookups associated with common ToR proxies.,TRUE\r\nwebhook.site,Detection,Static,0,High,Exfiltration,Possible data exfiltration,Detects possible data exfiltration.,TRUE\r\nautodiscover.com.br,Detection,Static,0,Medium,\"InitialAccess,CredentialAccess\",Exchange online autodiscover,Detects possible Exchange online autodiscover abuse.,TRUE\r\nautodiscover.com.cn,Detection,Static,0,Medium,\"InitialAccess,CredentialAccess\",Exchange online autodiscover,Detects possible Exchange online autodiscover abuse.,TRUE\r\nautodiscover.com.co,Detection,Static,0,Medium,\"InitialAccess,CredentialAccess\",Exchange online autodiscover,Detects possible Exchange online autodiscover abuse.,TRUE\r\nautodiscover.es,Detection,Static,0,Medium,\"InitialAccess,CredentialAccess\",Exchange online autodiscover,Detects possible Exchange online autodiscover abuse.,TRUE\r\nautodiscover.fr,Detection,Static,0,Medium,\"InitialAccess,CredentialAccess\",Exchange online autodiscover,Detects possible Exchange online autodiscover abuse.,TRUE\r\nautodiscover.in,Detection,Static,0,Medium,\"InitialAccess,CredentialAccess\",Exchange online autodiscover,Detects possible Exchange online autodiscover abuse.,TRUE\r\nautodiscover.it,Detection,Static,0,Medium,\"InitialAccess,CredentialAccess\",Exchange online autodiscover,Detects possible Exchange online autodiscover abuse.,TRUE\r\nautodiscover.sg,Detection,Static,0,Medium,\"InitialAccess,CredentialAccess\",Exchange online autodiscover,Detects possible Exchange online autodiscover abuse.,TRUE\r\nautodiscover.uk,Detection,Static,0,Medium,\"InitialAccess,CredentialAccess\",Exchange online autodiscover,Detects possible Exchange online autodiscover abuse.,TRUE\r\nautodiscover.xyz,Detection,Static,0,Medium,\"InitialAccess,CredentialAccess\",Exchange online autodiscover,Detects possible Exchange online autodiscover abuse.,TRUE\r\nautodiscover.online,Detection,Static,0,Medium,\"InitialAccess,CredentialAccess\",Exchange online autodiscover,Detects possible Exchange online autodiscover abuse.,TRUE\r\nwhatismyipaddress.com,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\nip2location.com,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\nipaddress.my,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\nwhatismyip.com,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\nipinfo.info,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\ncheckmyip.com,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\nmyip.com,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\ncheckmyip.org,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\ncanireachthe.net,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\nipv4.icanhazip.com,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\nip.anysrc.net,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\nedns.ip-api.com,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\nwtfismyip.com,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\ncheckip.dyndns.org,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\napi.2ip.ua,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\nicanhazip.com,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\napi.ipify.org,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\nip-api.com,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\ncheckip.amazonaws.com,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\nipecho.net,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\nipinfo.io,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\nipv4bot.whatismyipaddress.com,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\nfreegeoip.app,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\ncheckip.azurewebsites.net,Hunting,Static,0,Medium,CommandAndControl,IP check activity,Detects requests to ip lookup resources,TRUE\r\ngentilkiwi,Detection,Static,0,High,PrivilegeEscalation,CVE-2021-34527 (PrintNightmare) external exploit,Detects CVE-2021-34527 (PrintNightmare) external exploit,TRUE\r\nhidusi.com,Detection,Static,0,High,PrivilegeEscalation,CVE-2021-40444 exploitation,Detects CVE-2021-40444 exploitation.,TRUE\r\ndodefoh.com,Detection,Static,0,High,PrivilegeEscalation,CVE-2021-40444 exploitation,Detects CVE-2021-40444 exploitation.,TRUE\r\njoxinu.com,Detection,Static,0,High,PrivilegeEscalation,CVE-2021-40444 exploitation,Detects CVE-2021-40444 exploitation.,TRUE\r\npsec.forward.io.global.prod.fastly.net,Detection,Static,0,High,InitialAccess,Malicous Python packages,Detects requests to resources with malicious Python packages.,TRUE\r\nb0a0374cd1cb4305002e.d.requestbin.net,Detection,Static,0,High,InitialAccess,Malicous Python packages,Detects requests to resources with malicious Python packages.,TRUE\r\ntornadodomain.000webhostapp.com,Detection,Static,0,High,InitialAccess,Malicous Python packages,Detects requests to resources with malicious Python packages.,TRUE\r\nyxznlysc47wvrb9r9z211e1jbah15q,Detection,Static,0,High,InitialAccess,Malicous Python packages,Detects requests to resources with malicious Python packages.,TRUE\r\ndropbox.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nmediafire.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nonedrive.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nwire.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nmassive.io,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nefilecabinet.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nc-v.sh,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nfile.io,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\n0x0.st,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\ninstant.io,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\ncopy.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nmega.nz,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nicloud.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\npcloud.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nicedrive.net,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nWeTransfer.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nOnehub.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\ngetfilecloud.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nki.tc,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nuguu.se,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nflyle.app,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\ntransfer.sh,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nexpirebox.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\ndisk.yandex.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nfilestage.io,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nzippyshare.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\ndrive.google.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nbox.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nhubic.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nwikisend.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\ndropsend.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nanonymousfiles.io,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nanonfiles.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nfiledropper.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nprivatlab.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\ndropmefiles.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nonionshare.org,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nsendGB.com,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nvolafile.org,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nopenload.co,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\nuploadfiles.io,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\ngofile.io,Hunting,Static,0,Low,Exfiltration,Requests to online shares,Query searches for requests to online/cloud shares.,TRUE\r\n.click,Hunting,Static,0,Medium,\"CommandAndControl,Exfiltration\",DNS lookups for commonly abused TLDs,Some top level domains (TLDs) are more commonly associated with malware for a range of reasons - including how easy domains on these TLDs are to obtain. Many of these may be undesirable from an enterprise policy perspective. You can update and extend the list of TLD's you wish to search for. The Name Count column provides an initial insight into how widespread the domain usage is across the environment.,TRUE\r\n.club,Hunting,Static,0,Medium,\"CommandAndControl,Exfiltration\",DNS lookups for commonly abused TLDs,Some top level domains (TLDs) are more commonly associated with malware for a range of reasons - including how easy domains on these TLDs are to obtain. Many of these may be undesirable from an enterprise policy perspective. You can update and extend the list of TLD's you wish to search for. The Name Count column provides an initial insight into how widespread the domain usage is across the environment.,TRUE\r\n.download,Hunting,Static,0,Medium,\"CommandAndControl,Exfiltration\",DNS lookups for commonly abused TLDs,Some top level domains (TLDs) are more commonly associated with malware for a range of reasons - including how easy domains on these TLDs are to obtain. Many of these may be undesirable from an enterprise policy perspective. You can update and extend the list of TLD's you wish to search for. The Name Count column provides an initial insight into how widespread the domain usage is across the environment.,TRUE\r\n.xxx,Hunting,Static,0,Medium,\"CommandAndControl,Exfiltration\",DNS lookups for commonly abused TLDs,Some top level domains (TLDs) are more commonly associated with malware for a range of reasons - including how easy domains on these TLDs are to obtain. Many of these may be undesirable from an enterprise policy perspective. You can update and extend the list of TLD's you wish to search for. The Name Count column provides an initial insight into how widespread the domain usage is across the environment.,TRUE\r\n.xyz,Hunting,Static,0,Medium,\"CommandAndControl,Exfiltration\",DNS lookups for commonly abused TLDs,Some top level domains (TLDs) are more commonly associated with malware for a range of reasons - including how easy domains on these TLDs are to obtain. Many of these may be undesirable from an enterprise policy perspective. You can update and extend the list of TLD's you wish to search for. The Name Count column provides an initial insight into how widespread the domain usage is across the environment.,TRUE\r\n",
        "watchlistAlias": "DNS_Solution_Domain_IOCs",
        "contentType": "text/csv"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "DNS Essentials",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId1')]",
              "version": "[variables('analyticRuleVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId2')]",
              "version": "[variables('analyticRuleVersion2')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId3')]",
              "version": "[variables('analyticRuleVersion3')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId4')]",
              "version": "[variables('analyticRuleVersion4')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId5')]",
              "version": "[variables('analyticRuleVersion5')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId6')]",
              "version": "[variables('analyticRuleVersion6')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId7')]",
              "version": "[variables('analyticRuleVersion7')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId8')]",
              "version": "[variables('analyticRuleVersion8')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId9')]",
              "version": "[variables('analyticRuleVersion9')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_SummarizeData')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId1')]",
              "version": "[variables('huntingQueryVersion1')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId2')]",
              "version": "[variables('huntingQueryVersion2')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId3')]",
              "version": "[variables('huntingQueryVersion3')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId4')]",
              "version": "[variables('huntingQueryVersion4')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId5')]",
              "version": "[variables('huntingQueryVersion5')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId6')]",
              "version": "[variables('huntingQueryVersion6')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId7')]",
              "version": "[variables('huntingQueryVersion7')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId8')]",
              "version": "[variables('huntingQueryVersion8')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId9')]",
              "version": "[variables('huntingQueryVersion9')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId10')]",
              "version": "[variables('huntingQueryVersion10')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_huntingQuerycontentId11')]",
              "version": "[variables('huntingQueryVersion11')]"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_DNS_Solution_Monitoring_Configuration')]",
              "version": "2.0.0"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_DNS_Solution_Domain_IOCs')]",
              "version": "2.0.0"
            }
          ]
        },
        "firstPublishDate": "2023-01-14",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "Networking"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
