id: 8e4a010a-972c-4124-8c27-1efcd7e3125a
name: Detect DNS requests to known Domain IOCs (ASIM DNS Solution)
description: |
  "This rule identifies DNS requests to known domain IOCs in the [DNS query](https://learn.microsoft.com/azure/sentinel/normalization-schema-dns#query) logs. It evaluates DNS logs against 100+ known IOCs from the available Watchlist, which helps detect an attempt to communicate with known compromised domains.\\n\\nIt utilizes [ASIM](https://aka.ms/AboutASIM) normalization and is applied to any source that supports the ASIM DNS schema."
severity: Medium
status: Available 
tags:
  - Schema: ASimDns
    SchemaVersion: 0.1.6
requiredDataConnectors:
  - connectorId: ASimDnsActivityLogs
    dataTypes:
      - ASimDnsActivityLogs
  - connectorId: GCPDNSDataConnector
    dataTypes:
      - GCP_DNS_CL
  - connectorId: AzureFirewall
    dataTypes:
      - AzureDiagnostics
  - connectorId: CiscoUmbrellaDataConnector
    dataTypes:
      - Cisco_Umbrella_proxy_CL
  - connectorId: Corelight
    dataTypes:
      - Corelight_CL
  - connectorId: InfobloxNIOS
    dataTypes:
      - Syslog
  - connectorId: NXLogDnsLogs
    dataTypes:
      - NXLog_DNS_Server_CL
  - connectorId: DNS
    dataTypes:
      - DnsEvents
  - connectorId: AIVectraStream
    dataTypes:
      - VectraStream_CL
  - connectorId: WindowsForwardedEvents
    dataTypes:
      - WindowsEvents
  - connectorId: Zscaler
    dataTypes:
      - CommonSecurityLog
  - connectorId: ISCBind
    dataTypes:
      - Syslog
queryFrequency: 1h
queryPeriod: 1h
triggerOperator: gt
triggerThreshold: 0
tactics:
  - Impact
  - CommandAndControl
  - Exfiltration
  - PrivilegeEscalation
  - InitialAccess
  - CredentialAccess
relevantTechniques:
  - T1496
  - T1048
  - T1568
  - T1095
  - T1567
  - T1068
  - T1566
  - T1187
  - T1195
query: |
  let lookback = 1h;
  let DNS_IOCs = materialize(_GetWatchlist('DNS_Solution_Domain_IOCs')
    | where wl_Type == 'Detection' and wl_Enabled == 'TRUE'
    | project
        wl_DNSDomain,
        wl_Name,
        wl_Description,
        wl_Type,
        wl_ThresholdType,
        wl_Threshold,
        wl_Severity,
        wl_Tactic,
        wl_Enabled);
  let Dynamic_DomainList=DNS_IOCs | summarize  make_set(wl_DNSDomain);
  _Im_Dns(starttime=ago(lookback),domain_has_any=toscalar(Dynamic_DomainList))
  | join kind=inner['DNS_IOCs'] where DnsQuery has wl_DNSDomain
  | project
    SrcIpAddr,
    DnsQuery,
    EventResultDetails,
    Name=wl_Name,
    Description=wl_Description,
    TimeGenerated,
    Tactic=wl_Tactic,
    Severity=wl_Severity
  | summarize Count=count(), EventStartTime=min(TimeGenerated), EventEndTime=max(TimeGenerated) by SrcIpAddr,DnsQuery, EventResultDetails, Name, Description, Tactic, Severity
entityMappings:
  - entityType: DNS
    fieldMappings:
      - identifier: DomainName
        columnName: DnsQuery
  - entityType: IP
    fieldMappings:
      - identifier: Address
        columnName: SrcIpAddr
eventGroupingSettings:
  aggregationKind: AlertPerResult
alertDetailsOverride:
  alertDisplayNameFormat: "'{{Name}}' was detected. From client: '{{SrcIpAddr}}'"
  alertDescriptionFormat: "Alert Description: '{{Description}}'\n\nClient '{(SrcIpAddr)}' was detected as making request to '{(DnsQuery)}'"
  alertTacticsColumnName: "Tactic"
  alertSeverityColumnName": "Severity"
version: 1.0.0
kind: Scheduled